{
  "@odata.context":"$metadata",
  "Version":"4.0",
  "Reference":[
    {
      "Uri":"http://tinyurl.com/Org-OData-Measures-V1",
      "Include":[
        {
          "Alias":"Core",
          "Namespace":"Org.OData.Measures.V1"
        }
      ],
      "@Some.Term":{
        
      }
    },
    {
      "Uri":"http://somewhere/Vocabulary/V1",
      "IncludeAnnotations":[
        {
          "TermNamespace":"Name.Space",
          "TargetNamespace":"Target.Space"
        },
        {
          "TermNamespace":"Name.Space",
          "TargetNamespace":"Target.Space",
          "Qualifier":"SomeName"
        },
        {
          "TermNamespace":"NameSpace",
          "Qualifier":"SomeName"
        },
        {
          "TermNamespace":"Name.Space"
        }
      ]
    }
  ],
  "Schema":[
    {
      "Namespace":"Model1",
      "Alias":"Self",
      "@UI.ReferenceFacet":{
        "AnnotationPath":"@UI.LineItem"
      },
      "@UI.ReferenceFacet":{
        "AnnotationPath":"Product/Supplier/@UI.LineItem"
      },
      "@UI.ReferenceFacet#OnNavProp":{
        "AnnotationPath":"Product/Supplier@UI.LineItem"
      },
      "@UI.ReferenceFacet#OnNavPropQualified":{
        "AnnotationPath":"Product/Supplier@UI.LineItem#Tablet"
      },
      "@UI.ReferenceFacet":{
        "UrlRef":"http://LineItem"
      },
      "@UI.ReferenceFacet":{
        "AnnotationPath":"@x.Supplier#X/Contacts@y.ViewVariants"
      },
      "@UI.HyperLink":{
        "NavigationPropertyPath":"Supplier"
      },
      "@Is.Null":{
        "Null":{
          "@Within.Null":{
            
          }
        },
        "@Next.to.Null":{
          
        }
      },
      "@Vocabulary1.SubTitle":{
        "Int":1234,
        "@For.Constant":{
          
        }
      },
      "@A.Bool":{
        "Bool":true,
        "@Annotate.A.Bool":{
          
        }
      },
      "@A.Decimal":{
        "Decimal":12.34
      },
      "@A.Float":{
        "Float":1.23e4
      },
      "@A.Float":{
        "Float":"INF"
      },
      "@A.Float":{
        "Float":"-INF"
      },
      "@A.Float":{
        "Float":"NaN"
      },
      "@A.Float#Element":{
        "Float":1.23e4
      },
      "@An.Int":{
        "Int":1234
      },
      "@A.String":{
        "String":"1.23e4"
      },
      "@A.String":{
        "String":"Fast&Furious"
      },
      "@A.String#ToBeEscaped":{
        "String":"A\/\"good\"\r\nstory\\for\tkids"
      },
      "@A.Date":{
        "Date":"2013-10-09"
      },
      "@Capabilities.UpdateRestrictions":{
        "Record":{
          "@odata.type":"Derived.Type",
          "NonUpdatableNavigationProperties":{
            "Collection":[
              {
                "NavigationPropertyPath":"Supplier"
              },
              {
                "NavigationPropertyPath":"Category"
              }
            ]
          }
        }
      },
      "@SearchVocabulary.SearchResult":{
        "Record":{
          "Title":{
            "Path":"Name"
          },
          "Abstract":{
            "Path":"Description"
          },
          "Url":{
            "Apply":{
              "Function":"odata.concat",
              "Values":[
                {
                  "String":"Products("
                },
                {
                  "Path":"ID"
                },
                {
                  "String":")"
                }
              ],
              "@In.Apply":{
                
              }
            }
          }
        }
      },
      "@org.example.display.DisplayName":{
        "If":[
          {
            "Path":"IsFemale"
          },
          {
            "String":"Female"
          },
          {
            "String":"Male"
          }
        ],
        "If@In.If":{
          
        }
      },
      "@UI.CollectionFacet#Contacts":{
        "Collection":[
          {
            "AnnotationPath":"Supplier/@Communication.Contact"
          },
          {
            "AnnotationPath":"Customer/@Communication.Contact"
          }
        ]
      },
      "@Some.Thing":{
        "And":[
          {
            "Or":[
              {
                "Eq":[
                  {
                    "Ge":[
                      {
                        "Null":{
                          
                        }
                      },
                      {
                        "Null":{
                          
                        }
                      }
                    ],
                    "Ge@In.Ge":{
                      
                    }
                  },
                  {
                    "Gt":[
                      {
                        "Null":{
                          
                        }
                      },
                      {
                        "Null":{
                          
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "Ne":[
                  {
                    "Lt":[
                      {
                        "Null":{
                          
                        }
                      },
                      {
                        "Null":{
                          
                        }
                      }
                    ]
                  },
                  {
                    "Null":{
                      
                    }
                  }
                ]
              }
            ]
          },
          {
            "Not":{
              "Le":[
                {
                  "Float":"INF"
                },
                {
                  "Null":{
                    
                  }
                }
              ]
            }
          }
        ]
      },
      "@Twolegged.If":{
        "If":[
          {
            "Bool":true
          },
          {
            "Path":"Then"
          }
        ]
      },
      "@Twolegged.If":{
        "If":[
          {
            "Bool":false
          },
          {
            "Path":"Then"
          },
          {
            "Path":"Else"
          }
        ]
      },
      "EntityType":[
        {
          "Name":"Weird",
          "Key":[
            {
              "PropertyRef":"The/Key",
              "Alias":"TheKey"
            }
          ],
          "Property":[
            {
              "Name":"TheKey",
              "Type":"Edm.PropertyPath"
            },
            {
              "Name":"TheValue",
              "Type":"Edm.String",
              "MaxLength":"max"
            },
            {
              "Name":"TheString",
              "Type":"Edm.Strong",
              "MaxLength":"max"
            },
            {
              "Name":"Tags",
              "Type":"Collection(Edm.String)",
              "Nullable":"true",
              "SRID":"variable"
            },
            {
              "Type":"Edm.Decimal",
              "Name":"Price",
              "Scale":"variable"
            }
          ],
          "@Some.Term#SomeQualifier":{
            "Collection":[
              {
                "String":"SomeString"
              },
              {
                "Date":"1212-11-30"
              },
              {
                "DateTimeOffset":"2000-01-01T16:00:00.000-09:00"
              },
              {
                "DateTimeOffset":"2000-01-01T16:00:00Z"
              },
              {
                "TimeOfDay":"23:59:59.123456789012"
              },
              {
                "Path":"MyAddress/vCard.Address#work/Street"
              },
              {
                "EnumMember":"org.example.Pattern/Red"
              },
              {
                "EnumMember":"org.example.Pattern/Red org.example.Pattern/Striped"
              },
              {
                "Record":{
                  "Egon":{
                    "String":"1"
                  },
                  "Hugo":{
                    "String":"2",
                    "@Some.Term":{
                      "String":"Some Value"
                    }
                  },
                  "@Some.Term":{
                    "String":"Some Value"
                  }
                }
              },
              {
                "LabeledElement":{
                  "Name":"Attribute",
                  "String":"Hello"
                }
              },
              {
                "LabeledElement":{
                  "Name":"Element",
                  "String":"Hello"
                }
              },
              {
                "LabeledElement":{
                  "Name":"Record",
                  "Record":{
                    
                  }
                }
              },
              {
                "LabeledElementReference":"Model.Attribute"
              }
            ],
            "@Some.Term":{
              "String":"Some Value"
            }
          },
          "@Vocab.GIQSupplier":{
            "UrlRef":{
              "String":"http:\/\/www.odata.org"
            }
          },
          "@Vocab.GIQSupplier":{
            "UrlRef":{
              "Apply":{
                "Function":"odata.fillUriTemplate",
                "Values":[
                  {
                    "String":"http:\/\/host\/service\/Suppliers({suppID})"
                  },
                  {
                    "LabeledElement":{
                      "Name":"suppID",
                      "Apply":{
                        "Function":"odata.UriEncode",
                        "Values":[
                          {
                            "Path":"@SupplierId"
                          },
                          {
                            "DateTimeOffset":"2013-04-08T23:00:00.0Z"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          "@org.example.display.DisplayName":{
            "Cast":{
              "SRID":"variable",
              "Scale":"variable",
              "Type":"Edm.String",
              "String":"Product Catalog"
            }
          },
          "@Self.IsPreferredCustomer":{
            "IsOf":{
              "SRID":"variable",
              "Type":"Self.PreferredCustomer",
              "Path":"Customer/$count"
            }
          },
          "@Some.Binary":{
            "Binary":"Zg"
          },
          "@Some.Binary":{
            "Binary":"Zg=="
          },
          "@Some.Binary":{
            "Binary":"Zm8"
          },
          "@Some.Binary":{
            "Binary":"Zm8="
          },
          "@Some.Binary":{
            "Binary":"HugoHase-_ab"
          }
        },
        {
          "Name":"Order",
          "Property":[
            {
              "Name":"Quantity",
              "Type":"Edm.Decimal",
              "@Measures.Unit":{
                "Path":"ShippingUnit"
              }
            },
            {
              "Name":"ShippingUnit",
              "Type":"Edm.String",
              "@Core.Description":{
                "String":"Contains the unit for property Quantity"
              }
            }
          ]
        }
      ],
      "ComplexType":[
        {
          "Name":"Address",
          "OpenType":"true",
          "Property":[
            {
              "Name":"Street",
              "Type":"Edm.String"
            },
            {
              "Name":"Street",
              "Type":"Edm.String"
            }
          ],
          "NavigationProperty":[
            {
              "Name":"City",
              "Type":"MyModel.City"
            },
            {
              "Name":"Region",
              "Type":"MyModel.Region"
            },
            {
              "Name":"Country",
              "Type":"MyModel.Country"
            }
          ]
        }
      ],
      "EnumType":[
        {
          "Name":"Pattern",
          "Member":[
            {
              "Name":"Yellow",
              "@Does.Work":{
                
              },
              "@For.Testing":{
                "IsOf":{
                  "Type":"Edm.Binary",
                  "Path":"Hugo"
                }
              }
            }
          ]
        }
      ],
      "TypeDefinition":[
        {
          "Name":"Fixedstring",
          "UnderlyingType":"Edm.String"
        }
      ],
      "Function":[
        {
          "Name":"CreatedEntities",
          "Parameter":[
            {
              "Name":"before",
              "Type":"Edm.DateTimeOffset",
              "Nullable":"true"
            },
            {
              "Name":"after",
              "Type":"Edm.DateTimeOffset",
              "Nullable":"true"
            }
          ],
          "ReturnType":{
            "Type":"Collection(Edm.EntityType)",
            "Nullable":"true"
          }
        },
        {
          "Name":"TopSellingProducts",
          "Parameter":[
            {
              "Name":"Year",
              "Type":"Edm.Decimal",
              "Precision":"4",
              "Scale":"0",
              "Nullable":"true"
            }
          ],
          "ReturnType":{
            "Type":"Collection(Model.Product)",
            "@A.B":{
              "String":"Works"
            }
          }
        }
      ],
      "EntityContainer":[
        {
          "Name":"Sales",
          "EntitySet":[
            {
              "Name":"StandardCustomers",
              "EntityType":"Self.Customer",
              "NavigationPropertyBinding":[
                {
                  "Path":"Orders",
                  "Target":"Orders"
                }
              ]
            },
            {
              "Name":"PreferredCustomer",
              "EntityType":"Self.Customer",
              "NavigationPropertyBinding":[
                {
                  "Path":"Orders",
                  "Target":"Orders"
                }
              ]
            },
            {
              "Name":"Orders",
              "EntityType":"Self.Order"
            }
          ]
        }
      ]
    },
    {
      "Namespace":"Schema.One",
      "Alias":"Self",
      "EntityType":[
        {
          "Name":"Waldo",
          "Key":[
            {
              "PropertyRef":"ID"
            }
          ],
          "Property":[
            {
              "Name":"ID",
              "Type":"Edm.String",
              "Nullable":"false"
            }
          ]
        }
      ],
      "Action":[
        {
          "Name":"Rejection",
          "IsBound":"true",
          "Parameter":[
            {
              "Name":"Reason",
              "Type":"Edm.String",
              "Nullable":"true"
            }
          ]
        }
      ],
      "Function":[
        {
          "Name":"OddWaldos",
          "IsBound":"true",
          "EntitySetPath":"in",
          "Parameter":[
            {
              "Name":"in",
              "Type":"Collection(Self.Waldo)"
            }
          ],
          "ReturnType":{
            "Type":"Collection(Self.Waldo)"
          }
        }
      ],
      "EntityContainer":[
        {
          "Name":"Default",
          "EntitySet":[
            {
              "Name":"Waldos",
              "EntityType":"Self.Waldo"
            }
          ],
          "FunctionImport":[
            {
              "Name":"Bar",
              "Function":"Self.Foo"
            }
          ]
        }
      ]
    },
    {
      "Namespace":"Schema.One",
      "Alias":"Self",
      "Function":[
        {
          "Name":"Foo",
          "ReturnType":{
            "Type":"Edm.String"
          }
        }
      ]
    },
    {
      "Namespace":"Schema.Two",
      "Alias":"Self",
      "EntityType":[
        {
          "Name":"Waldo",
          "Property":[
            {
              "Name":"Fred",
              "Type":"Edm.String"
            }
          ]
        },
        {
          "Name":"Fred",
          "Key":[
            {
              "PropertyRef":"ID"
            }
          ],
          "Property":[
            {
              "Name":"ID",
              "Type":"Edm.String",
              "Nullable":"false"
            }
          ],
          "NavigationProperty":[
            {
              "Name":"Waldos",
              "Type":"Collection(Self.Waldos)"
            }
          ]
        }
      ],
      "EntityContainer":[
        {
          "Name":"Default",
          "EntitySet":[
            {
              "Name":"Waldos",
              "EntityType":"Self.Waldo"
            },
            {
              "Name":"Freds",
              "EntityType":"Self.Fred",
              "NavigationPropertyBinding":[
                {
                  "Target":"Waldos",
                  "Path":"Waldos"
                },
                {
                  "Target":"Namespace.Container/Freds",
                  "Path":"MoreWaldos"
                },
                {
                  "Target":"Namespace.Container/Orders/Items/M.E/Nav",
                  "Path":"MoreWaldos"
                }
              ]
            }
          ],
          "FunctionImport":[
            {
              "Name":"Bar",
              "Function":"Other.Foo",
              "IncludeInServiceDocument":"true",
              "EntitySet":"Namespace.Container/Freds"
            },
            {
              "Name":"CreatedEntities",
              "Function":"Model.CreatedEntities",
              "EntitySet":"Waldos"
            },
            {
              "Name":"Bar",
              "Function":"Other.Foo"
            }
          ]
        }
      ]
    },
    {
      "Namespace":"X",
      "Term":[
        {
          "Name":"Person",
          "Type":"X.PersonType"
        },
        {
          "Name":"Team",
          "Type":"Collection(X.PersonType)",
          "@custom.ItemIsA":{
            "String":"X.Person"
          }
        },
        {
          "Name":"Movie",
          "Type":"X.MovieType"
        },
        {
          "Name":"Friend",
          "Type":"X.FriendType"
        }
      ]
    },
    {
      "Namespace":"Y",
      "ComplexType":[
        {
          "Name":"DeveloperType",
          "BaseType":"X.PersonType"
        },
        {
          "Name":"ScrumTeamType",
          "Property":[
            {
              "Name":"ScrumMaster",
              "Type":"Y.DeveloperType",
              "@custom.IsA":{
                "String":"Y.Developer X.Person"
              }
            }
          ]
        },
        {
          "Name":"ArchivedMovieType",
          "BaseType":"X.MovieType",
          "Property":[
            {
              "Name":"ArchivedAt",
              "Type":"Edm.Date"
            }
          ],
          "@custom.IsA":{
            "String":"X.Movie"
          }
        },
        {
          "Name":"SomeThingType",
          "Property":[
            {
              "Name":"SomeProperty",
              "Type":"Edm.String"
            },
            {
              "Name":"Contacts",
              "Type":"Collection(X.PersonType)",
              "@custom.ItemIsA":{
                "String":"X.Person"
              }
            }
          ],
          "NavigationProperty":[
            {
              "Name":"VIPs",
              "Type":"Collection(X.Friend)",
              "@custom.ItemIsA":{
                "String":"X.Friend"
              }
            }
          ]
        }
      ],
      "Term":[
        {
          "Name":"Developer",
          "BaseTerm":"X.Person",
          "Type":"Y.DeveloperType"
        },
        {
          "Name":"DevelopmentTeam",
          "Type":"Collection(Y.DeveloperType)",
          "@custom.ItemIsA":{
            "String":"Y.Developer"
          },
          "@custom.IsA":{
            "String":"X.Team"
          }
        },
        {
          "Name":"ScrumTeam",
          "BaseTerm":"Y.DevelopmentTeam",
          "Type":"Y.ScrumTeamType"
        },
        {
          "Name":"Movies",
          "Type":"Collection(X.Movie)"
        },
        {
          "Name":"ArchivedMovies",
          "Type":"Collection(Y.ArchivedMovieType)",
          "@custom.ItemIsA":{
            "String":"X.Movie"
          }
        },
        {
          "Name":"SomeThing",
          "Type":"Y.SomeThingType"
        }
      ],
      "Annotations":[
        {
          "Target":"Some.EntityType",
          "@X.Person":{
            "Record":{
              
            }
          },
          "@Y.Developer":{
            "Record":{
              
            }
          }
        },
        {
          "Target":"Some.EntityType",
          "@Y.DevelopmentTeam":{
            "Path":"SomeNavProp/@Y.Developer",
            "@custom.IsA":{
              "String":"X.Team"
            }
          }
        },
        {
          "Target":"Some.EntityType",
          "@Y.DevelopmentTeam":{
            "Path":"SomeNavProp/@Y.Developer",
            "@custom.IsA":{
              "String":"X.Team"
            }
          },
          "@Y.ScrumTeam":{
            "Record":{
              "ScrumMaster":{
                "Record":{
                  
                },
                "@custom.IsA":{
                  "String":"Y.Developer X.Person"
                }
              }
            }
          }
        },
        {
          "Target":"Some.EntityType",
          "@Y.Movies":{
            "Path":"AllMyMovies"
          }
        },
        {
          "Target":"MySchema.MyEntityContainer/MyEntitySet/MySchema.MyEntityType/MyProperty",
          "@Y.Movies":{
            "Path":"AllMyMovies"
          }
        },
        {
          "Target":"Some.EntityType",
          "@Y.ArchivedMovies":{
            "Path":"MoviesInStorage",
            "@custom.ItemIsA":{
              "String":"X.Movie"
            }
          }
        },
        {
          "Target":"Some.EntityType",
          "@Y.Something":{
            "Record":{
              "SomeProperty":{
                "String":"SomeThing"
              },
              "Contacts":{
                "Path":"MyContacts",
                "@custom.ItemIsA":{
                  "String":"X.Person"
                }
              },
              "VIPs":{
                "Path":"MyBestFriends",
                "@custom.ItemIsA":{
                  "String":"X.Person"
                }
              }
            }
          }
        }
      ]
    }
  ]
}