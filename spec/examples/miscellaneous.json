{
    "$Version": "4.0",
    "$EntityContainer": "org.example.DemoService",
    "$Reference": {
        "http://docs.oasis-open.org/odata/odata/v4.0/os/vocabularies/Org.OData.Core.V1.xml": {
            "$Include": [
                {
                    "Core": "Org.OData.Core.V1."
                }
            ]
        },
        "http://tinyurl.com/Org-OData-Measures-V1": {
            "@Some.Term": true,
            "$Include": [
                {
                    "Measures": "Org.OData.Measures.V1."
                }
            ]
        },
        "http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/vocabularies/Org.OData.Validation.V1.xml": {
            "$Include": [
                {
                    "Validation": "Org.OData.Validation.V1."
                }
            ]
        },
        "http://somewhere/Vocabulary/V1": {
            "$IncludeAnnotations": [
                {
                    "$TermNamespace": "Name.Space",
                    "$TargetNamespace": "Target.Space"
                },
                {
                    "$TermNamespace": "Name.Space",
                    "$TargetNamespace": "Target.Space",
                    "$Qualifier": "SomeName"
                },
                {
                    "$TermNamespace": "Name.Space",
                    "$Qualifier": "SomeName"
                },
                {
                    "$TermNamespace": "Name.Space"
                }
            ]
        },
        "http://vocabs.odata.org/capabilities/v1": {
            "$Include": [
                {
                    "Capabilities": "Org.OData.Capabilities.V1."
                }
            ]
        },
        "http://vocabs.odata.org/display/v1": {
            "$Include": [
                {
                    "UI": "org.example.Display."
                },
                "anotherOne."
            ]
        },
        "http://odata.org/ann/b": {
            "$IncludeAnnotations": [
                {
                    "$TermNamespace": "org.example.validation"
                },
                {
                    "$TermNamespace": "org.example.display",
                    "$Qualifier": "Tablet"
                },
                {
                    "$TermNamespace": "org.example.hcm",
                    "$TargetNamespace": "com.contoso.Sales"
                },
                {
                    "$TermNamespace": "org.example.hcm",
                    "$Qualifier": "Tablet",
                    "$TargetNamespace": "com.contoso.Person"
                }
            ]
        }
    },
    "org.example.": {
        "$kind": "Schema",
        "@Core.Description": "Examples from Part 3: CSDL"
    },
    "org.example2.": {
        "$kind": "Schema",
        "@Core.Description": "Examples from Part 3: CSDL - second schema",
        "$Annotations": {
            "Self.Person": {
                "@org.example.display.DisplayName#Tablet": {
                    "$Path": "FirstName"
                },
                "@org.example.display.Thumbnail": {
                    "$Binary": "T0RhdGE"
                },
                "@org.example.display.Thumbnail#element": {
                    "$Binary": "T0RhdGE"
                },
                "@org.example.display.ReadOnly": true,
                "@org.example.display.ReadOnly#element": true,
                "@org.example.vCard.birthDay": {
                    "$Date": "2000-01-01"
                },
                "@org.example.vCard.birthDay#element": {
                    "$Date": "2000-01-01"
                },
                "@org.example.display.LastUpdated": {
                    "$DateTimeOffset": "2000-01-01T16:00:00.000Z"
                },
                "@org.example.display.LastUpdated#element": {
                    "$DateTimeOffset": "2000-01-01T16:00:00.000-09:00"
                },
                "@org.example.display.Width": {
                    "$Decimal": "3.14"
                },
                "@org.example.display.Width#element": {
                    "$Decimal": "3.14"
                },
                "@org.example.task.duration": {
                    "$Duration": "P7D"
                },
                "@org.example.task.duration#element": {
                    "$Duration": "P11DT23H59M59.999999999999S"
                },
                "@org.example.HasPattern": {
                    "$EnumMember": "Red"
                },
                "@org.example.HasPattern#element": {
                    "$EnumMember": "Red"
                },
                "@org.example.HasPattern#list": {
                    "$EnumMember": "Red,Striped"
                },
                "@org.example.HasPattern#listelement": {
                    "$EnumMember": "Red,Striped"
                },
                "@org.example.display.FloatWidth": 3.14,
                "@org.example.display.FloatWidth#element": 3.14,
                "@org.example.display.Id": {
                    "$Guid": "21EC2020-3AEA-1069-A2DD-08002B30309D"
                },
                "@org.example.display.Id#element": {
                    "$Guid": "21EC2020-3AEA-1069-A2DD-08002B30309D"
                },
                "@org.example.display.IntWidth": 42,
                "@org.example.display.IntWidth#element": 42,
                "@org.example.display.DisplayName": "Product Catalog",
                "@org.example.display.DisplayName#element": "Product Catalog",
                "@org.example.display.EndTime": {
                    "$TimeOfDay": "21:45:00"
                },
                "@org.example.display.EndTime#element": {
                    "$TimeOfDay": "21:45:00"
                },
                "@UI.ReferenceFacet": {
                    "$AnnotationPath": "Product/Supplier/@UI.LineItem"
                },
                "@UI.CollectionFacet#Contacts": [
                    {
                        "$AnnotationPath": "Supplier/@Communication.Contact"
                    },
                    {
                        "$AnnotationPath": "Customer/@Communication.Contact"
                    }
                ],
                "@org.example.display.DisplayName#apply": {
                    "$Apply": [
                        "Product: ",
                        {
                            "$Path": "ProductName"
                        },
                        " (",
                        {
                            "$Path": "Available/Quantity"
                        },
                        "",
                        {
                            "$Path": "Available/Unit"
                        },
                        " available)"
                    ],
                    "$Function": "odata.concat"
                },
                "@Some.Term#Example57": {
                    "$Apply": [
                        "http://host/service/Genres('{genreName}')",
                        {
                            "$LabeledElement": {
                                "$Path": "NameOfMovieGenre"
                            },
                            "$Name": "org.example2.genreName"
                        }
                    ],
                    "$Function": "odata.fillUriTemplate"
                },
                "@Some.Term#Example58": {
                    "$Apply": [
                        "http://host/service/Genres({genreName2})",
                        {
                            "$LabeledElement": {
                                "$Apply": [
                                    {
                                        "$Path": "NameOfMovieGenre"
                                    }
                                ],
                                "$Function": "odata.uriEncode"
                            },
                            "$Name": "org.example2.genreName2"
                        }
                    ],
                    "$Function": "odata.fillUriTemplate"
                },
                "@org.example.display.Threshold": {
                    "$Cast": {
                        "$Path": "Average"
                    },
                    "$Type": "Edm.Decimal"
                },
                "@org.example.seo.SeoTerms": [
                    "Product",
                    "Supplier",
                    "Customer"
                ],
                "@org.example.person.Gender": {
                    "$If": [
                        {
                            "$Path": "IsFemale"
                        },
                        "Female",
                        "Male"
                    ]
                },
                "@Self.IsPreferredCustomer": {
                    "$IsOf": {
                        "$Path": "Customer"
                    },
                    "$Type": "org.example.PreferredCustomer"
                },
                "@org.example.display.DisplayName#l": {
                    "$LabeledElement": {
                        "$Path": "FirstName"
                    },
                    "$Name": "org.example2.CustomerFirstName"
                },
                "@org.example.display.DisplayName#lelement": {
                    "$LabeledElement": {
                        "$Path": "FirstName"
                    },
                    "$Name": "org.example2.CustomerFirstName"
                },
                "@org.example.display.DisplayName#ref": {
                    "$LabeledElementReference": "org.example2.CustomerFirstName"
                },
                "@org.example.display.DisplayName#null": null,
                "@UI.HyperLink": {
                    "$NavigationPropertyPath": "Supplier"
                },
                "@Capabilities.UpdateRestrictions#element": {
                    "NonUpdatableNavigationProperties": [
                        {
                            "$NavigationPropertyPath": "Supplier"
                        },
                        {
                            "$NavigationPropertyPath": "Category"
                        }
                    ]
                },
                "@org.example.display.DisplayName#path": {
                    "$Path": "FirstName"
                },
                "@org.example.display.DisplayName#pathelement": {
                    "$Path": "@vCard.Address#work/FullName"
                },
                "@UI.RefreshOnChangeOf": {
                    "$PropertyPath": "ChangedAt"
                },
                "@Capabilities.UpdateRestrictions#element2": {
                    "NonUpdatableProperties": [
                        {
                            "$PropertyPath": "CreatedAt"
                        },
                        {
                            "$PropertyPath": "ChangedAt"
                        }
                    ]
                },
                "@org.example.person.Employee": {
                    "GivenName": {
                        "$Path": "FirstName"
                    },
                    "Surname": {
                        "$Path": "LastName"
                    },
                    "Manager": {
                        "$Path": "DirectSupervisor"
                    },
                    "CostCenter": {
                        "$UrlRef": {
                            "$Apply": [
                                "http://host/anotherservice/CostCenters('{ccid}')",
                                {
                                    "$LabeledElement": {
                                        "$Path": "CostCenterID"
                                    },
                                    "$Name": "org.example2.ccid"
                                }
                            ],
                            "$Function": "odata.fillUriTemplate"
                        }
                    }
                },
                "@Vocab.Supplier": {
                    "$UrlRef": {
                        "$Apply": [
                            "http://host/service/Suppliers({suppID})",
                            {
                                "$LabeledElement": {
                                    "$Apply": [
                                        {
                                            "$Path": "SupplierId"
                                        }
                                    ],
                                    "$Function": "odata.uriEncode"
                                },
                                "$Name": "org.example2.suppID"
                            }
                        ],
                        "$Function": "odata.fillUriTemplate"
                    }
                },
                "@Core.LongDescription#element": {
                    "$UrlRef": "http://host/wiki/HowToUse"
                },
                "@Core.LongDescription": {
                    "$UrlRef": "http://host/wiki/HowToUse"
                }
            }
        }
    },
    "Model1.": {
        "$kind": "Schema",
        "@UI.ReferenceFacet": {
            "$AnnotationPath": "@UI.LineItem"
        },
        "@UI.ReferenceFacet#OnNavPropTarget": {
            "$AnnotationPath": "Product/Supplier/@UI.LineItem"
        },
        "@UI.ReferenceFacet#OnNavProp": {
            "$AnnotationPath": "Product/Supplier@UI.LineItem"
        },
        "@UI.ReferenceFacet#OnNavPropQualified": {
            "$AnnotationPath": "Product/Supplier@UI.LineItem#Tablet"
        },
        "@UI.ReferenceFacet#ViaUrl": {
            "$UrlRef": "http://LineItem"
        },
        "@UI.ReferenceFacet#complicated": {
            "$AnnotationPath": "@x.Supplier#X/Contacts@y.ViewVariants"
        },
        "@UI.HyperLink": {
            "$NavigationPropertyPath": "Supplier"
        },
        "@Is.Null": {
            "$Null": null,
            "@Within.Null": true
        },
        "@Is.Null@Next.to.Null": true,
        "@Vocabulary1.SubTitle": 1234,
        "@Vocabulary1.SubTitle@For.Constant": true,
        "@A.Bool": true,
        "@A.Bool@Annotate.A.Bool": true,
        "@A.Decimal": {
            "$Decimal": "12.34"
        },
        "@A.Float": 1.23456789e4,
        "@A.Float#inf": {
            "$Float": "INF"
        },
        "@A.Float#minusInf": {
            "$Float": "-INF"
        },
        "@A.Float#nan": {
            "$Float": "NaN"
        },
        "@A.Float#Element": 1.23456789e4,
        "@An.Int": 1234,
        "@A.Very.Long.Int": {
            "$Int": "9007199254740992"
        },
        "@A.String": "1.23e4",
        "@A.String#withAmp": "Fast&Furious",
        "@A.String#ToBeEscaped": "A/\"good\"\r\nstory\\for\tkids",
        "@A.Guid": {
            "$Guid": "86a96539-871b-45cf-b96b-93dbc235105e"
        },
        "@A.Guid#Element": {
            "$Guid": "86a96539-871b-45cf-b96b-93dbc235105e"
        },
        "@A.Date": {
            "$Date": "2013-10-09"
        },
        "@Capabilities.UpdateRestrictions": {
            "Updatable": true,
            "NonUpdatableNavigationProperties": [
                {
                    "$NavigationPropertyPath": "Supplier"
                },
                {
                    "$NavigationPropertyPath": "Category"
                }
            ]
        },
        "@SearchVocabulary.SearchResult": {
            "Title": {
                "$Path": "Name"
            },
            "Abstract": {
                "$Path": "Description"
            },
            "Url": {
                "$Apply": [
                    "Products(",
                    {
                        "$Path": "ID"
                    },
                    ")"
                ],
                "$Function": "odata.concat",
                "@In.Apply": true
            }
        },
        "@org.example.display.DisplayName#if": {
            "$If": [
                {
                    "$Path": "IsFemale"
                },
                "Female",
                "Male"
            ],
            "@In.If": true
        },
        "@UI.CollectionFacet#Contacts": [
            {
                "$AnnotationPath": "Supplier/@Communication.Contact"
            },
            {
                "$AnnotationPath": "Customer/@Communication.Contact"
            }
        ],
        "@Some.Thing": {
            "$And": [
                {
                    "$Or": [
                        {
                            "$Eq": [
                                {
                                    "$Ge": [
                                        null,
                                        null
                                    ],
                                    "@In.Ge": true
                                },
                                {
                                    "$Gt": [
                                        null,
                                        null
                                    ]
                                }
                            ]
                        },
                        {
                            "$Ne": [
                                {
                                    "$Lt": [
                                        null,
                                        null
                                    ]
                                },
                                null
                            ]
                        }
                    ]
                },
                {
                    "$Not": {
                        "$Le": [
                            {
                                "$Float": "INF"
                            },
                            null
                        ]
                    }
                }
            ]
        },
        "@Onelegged.If": {
            "$If": [
                true,
                {
                    "$Path": "Then"
                }
            ]
        },
        "@Twolegged.If": {
            "$If": [
                false,
                {
                    "$Path": "Then"
                },
                {
                    "$Path": "Else"
                }
            ]
        }
    },
    "X.": {
        "$kind": "Schema"
    },
    "Y.": {
        "$kind": "Schema",
        "$Annotations": {
            "Some.EntityType": {
                "@X.Person": {

                },
                "@Y.Developer": {

                },
                "@Org.OData.Core.V1.Description": "External description",
                "@Org.OData.Core.V1.Description#alt": "Alternative description",
                "@Core.Description": {
                    "$Path": "SomeProperty"
                },
                "@Y.DevelopmentTeam": {
                    "$Path": "SomeCollectionNavProp/@Y.Developer"
                },
                "@Y.DevelopmentTeam@custom.IsA": "X.Team",
                "@Y.ScrumTeam": {
                    "ScrumMaster": {

                    },
                    "ScrumMaster@custom.IsA": "Y.Developer X.Person"
                },
                "@Y.Movies": {
                    "$Path": "AllMyMovies"
                },
                "@Y.ArchivedMovies": {
                    "$Path": "MoviesInStorage"
                },
                "@Y.ArchivedMovies@custom.ItemIsA": "X.Movie",
                "@Y.Something": {
                    "SomeProperty": "Some Thing",
                    "AnotherProperty": "A string with spaces",
                    "SomeTime": {
                        "$Duration": "P20D"
                    },
                    "MoreTime": {
                        "$Duration": "P20D"
                    },
                    "Contacts": {
                        "$Path": "MyContacts"
                    },
                    "Contacts@custom.ItemIsA": "X.Person",
                    "VIPs": {
                        "$Path": "MyBestFriends"
                    },
                    "VIPs@custom.ItemIsA": "X.Person"
                }
            },
            "MySchema.MyEntityContainer/MyEntitySet/MySchema.MyEntityType/MyProperty": {
                "@Y.Movies": {
                    "$Path": "AllMyMovies"
                }
            }
        }
    },
    "org.example.Measurement": {
        "$kind": "ComplexType",
        "Dimension": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$Nullable": false,
            "$MaxLength": 50,
            "$DefaultValue": "Unspecified"
        },
        "Length": {
            "$kind": "Property",
            "$Type": "Edm.Decimal",
            "$Nullable": false,
            "$Precision": 18,
            "$Scale": 2
        }
    },
    "org.example.Example7to11": {
        "$kind": "ComplexType",
        "Units": {
            "$kind": "Property",
            "$isCollection": true,
            "$Type": "Edm.String"
        },
        "SuggestedTimes": {
            "$kind": "Property",
            "$isCollection": true,
            "$Type": "Edm.DateTimeOffset",
            "$Precision": 6
        },
        "Amount9": {
            "$kind": "Property",
            "$Type": "Edm.Decimal",
            "$Precision": 3,
            "$Scale": 2
        },
        "Amount11": {
            "$kind": "Property",
            "$Type": "Edm.Decimal",
            "$Precision": 3,
            "$Scale": "variable"
        }
    },
    "org.example.Product": {
        "$kind": "EntityType",
        "$Key": [
            "ID"
        ],
        "ID": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$Nullable": false
        },
        "CategoryID": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$Nullable": false
        },
        "Category": {
            "$kind": "NavigationProperty",
            "$Type": "org.example.Category",
            "$Nullable": false,
            "$Partner": "Products",
            "$ReferentialConstraint": {
                "CategoryID": "ID",
                "CategoryKind": "Kind"
            }
        },
        "Supplier": {
            "$kind": "NavigationProperty",
            "$Type": "org.example.Supplier"
        }
    },
    "org.example.Supplier": {
        "$kind": "EntityType",
        "$Key": [
            "ID"
        ],
        "ID": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$Nullable": false
        }
    },
    "org.example.Customer": {
        "$kind": "EntityType",
        "$Key": [
            "ID"
        ],
        "ID": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$Nullable": false
        }
    },
    "org.example.Order": {
        "$kind": "EntityType",
        "$Key": [
            "ID"
        ],
        "ID": {
            "$kind": "Property",
            "$Type": "Edm.Int64",
            "$Nullable": false
        }
    },
    "org.example.Category": {
        "$kind": "EntityType",
        "$Key": [
            "ID"
        ],
        "ID": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$Nullable": false
        },
        "Products": {
            "$kind": "NavigationProperty",
            "$isCollection": true,
            "$Type": "org.example.Product",
            "$Partner": "Category",
            "$OnDelete": "Cascade",
            "$OnDelete@Core.Description": "Delete all related entities"
        }
    },
    "org.example.Employee": {
        "$kind": "EntityType",
        "$HasStream": true,
        "$Key": [
            "ID"
        ],
        "ID": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$Nullable": false
        },
        "FirstName": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$Nullable": false
        },
        "LastName": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$Nullable": false
        },
        "Manager": {
            "$kind": "NavigationProperty",
            "$Type": "org.example.Manager"
        }
    },
    "org.example.Manager": {
        "$kind": "EntityType",
        "$BaseType": "org.example.Employee",
        "AnnualBudget": {
            "$kind": "Property",
            "$Type": "Edm.Decimal"
        },
        "Employees": {
            "$kind": "NavigationProperty",
            "$isCollection": true,
            "$Type": "org.example.Employee"
        }
    },
    "org.example.Category17": {
        "$kind": "EntityType",
        "$Key": [
            "ID"
        ],
        "ID": {
            "$kind": "Property",
            "$Type": "Edm.Int32",
            "$Nullable": false
        },
        "Name": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "@Core.IsLanguageDependent": true
        }
    },
    "org.example.Category18": {
        "$kind": "EntityType",
        "$Key": [
            {
                "EntityInfoID": "Info/ID"
            }
        ],
        "Info": {
            "$kind": "Property",
            "$Type": "org.example.EntityInfo",
            "$Nullable": false
        },
        "Name": {
            "$kind": "Property",
            "$Type": "Edm.String"
        }
    },
    "org.example.EntityInfo": {
        "$kind": "ComplexType",
        "ID": {
            "$kind": "Property",
            "$Type": "Edm.Int32",
            "$Nullable": false
        },
        "Created": {
            "$kind": "Property",
            "$Type": "Edm.DateTimeOffset"
        }
    },
    "org.example.OrderLine": {
        "$kind": "EntityType",
        "$Key": [
            "OrderID",
            "LineNumber"
        ],
        "OrderID": {
            "$kind": "Property",
            "$Type": "Edm.Int32",
            "$Nullable": false
        },
        "LineNumber": {
            "$kind": "Property",
            "$Type": "Edm.Int32",
            "$Nullable": false
        }
    },
    "org.example.Dimensions": {
        "$kind": "ComplexType",
        "Height": {
            "$kind": "Property",
            "$Nullable": false,
            "$Type": "Edm.Decimal"
        },
        "Weight": {
            "$kind": "Property",
            "$Nullable": false,
            "$Type": "Edm.Decimal"
        },
        "Length": {
            "$kind": "Property",
            "$Nullable": false,
            "$Type": "Edm.Decimal"
        }
    },
    "org.example.Product22": {
        "$kind": "EntityType",
        "$Key": [
            "ID"
        ],
        "ID": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$Nullable": false
        },
        "ProductDimensions": {
            "$kind": "Property",
            "$Type": "org.example.Dimensions"
        },
        "ShippingDimensions": {
            "$kind": "Property",
            "$Type": "org.example.Dimensions"
        }
    },
    "org.example.ShipmentBox": {
        "$kind": "EntityType",
        "$Key": [
            "ID"
        ],
        "ID": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$Nullable": false
        },
        "Dimensions": {
            "$kind": "Property",
            "$Type": "org.example.Dimensions"
        }
    },
    "org.example.FileAccess": {
        "$kind": "EnumType",
        "$UnderlyingType": "Edm.Int32",
        "$IsFlags": true,
        "Read": 1,
        "Read@Core.Description": "Read access permitted",
        "Write": 2,
        "Create": 4,
        "Delete": 8
    },
    "org.example.ShippingMethod": {
        "$kind": "EnumType",
        "FirstClass": 0,
        "FirstClass@Core.Description": "Shipped with highest priority",
        "TwoDay": 1,
        "TwoDay@Core.Description": "Shipped within two days",
        "Overnight": 2,
        "Overnight@Core.Description": "Shipped overnight",
        "@Core.Description": "Method of shipping"
    },
    "org.example.Pattern": {
        "$kind": "EnumType",
        "$UnderlyingType": "Edm.Int32",
        "$IsFlags": true,
        "Plain": 0,
        "Red": 1,
        "Blue": 2,
        "Yellow": 4,
        "Solid": 8,
        "Striped": 16,
        "SolidRed": 9,
        "SolidBlue": 10,
        "SolidYellow": 12,
        "RedBlueStriped": 19,
        "RedYellowStriped": 21,
        "BlueYellowStriped": 22
    },
    "org.example.Length": {
        "$kind": "TypeDefinition",
        "$UnderlyingType": "Edm.Int32",
        "@Org.OData.Measures.V1.Unit": "Centimeters"
    },
    "org.example.Weight": {
        "$kind": "TypeDefinition",
        "$UnderlyingType": "Edm.Int32",
        "@Org.OData.Measures.V1.Unit": "Kilograms"
    },
    "org.example.Size": {
        "$kind": "ComplexType",
        "Height": {
            "$kind": "Property",
            "$Type": "org.example.Length"
        },
        "Weight": {
            "$kind": "Property",
            "$Type": "org.example.Weight"
        }
    },
    "org.example.TopSellingProducts": [
        {
            "$kind": "Function",
            "$Parameter": [
                {
                    "$Name": "Year",
                    "$Type": "Edm.Decimal",
                    "$Precision": 4,
                    "$Scale": 0
                }
            ],
            "$ReturnType": {
                "$isCollection": true,
                "$Type": "org.example.Product"
            }
        }
    ],
    "org.example2.Product": {
        "$kind": "EntityType",
        "$Key": [
            "ID"
        ],
        "ID": {
            "$kind": "Property",
            "$Nullable": false,
            "$Type": "Edm.Int32"
        },
        "Name": {
            "$kind": "Property",
            "$Type": "Edm.String"
        },
        "Description": {
            "$kind": "Property",
            "$Type": "Edm.String"
        },
        "@UI.DisplayName": {
            "$Path": "Name"
        },
        "@SearchVocabulary.SearchResult": {
            "Title": {
                "$Path": "Name"
            },
            "Abstract": {
                "$Path": "Description"
            },
            "Url": {
                "$Apply": [
                    "Products(",
                    {
                        "$Path": "ID"
                    },
                    ")"
                ],
                "$Function": "odata.concat"
            }
        }
    },
    "org.example2.IsURI": {
        "$kind": "Term",
        "$Type": "Org.OData.Core.V1.Tag",
        "$DefaultValue": true,
        "$AppliesTo": "Property",
        "@Core.Description": "Properties and terms annotated with this term MUST contain a valid URI",
        "@Core.RequiresType": "Edm.String"
    },
    "Model1.NullablePrimitiveTypes": {
        "$kind": "ComplexType",
        "NullValue": {
            "$kind": "Property",
            "$Type": "Edm.Boolean",
            "$DefaultValue": null
        },
        "TrueValue": {
            "$kind": "Property",
            "$Type": "Edm.Boolean",
            "$DefaultValue": true
        },
        "FalseValue": {
            "$kind": "Property",
            "$Type": "Edm.Boolean",
            "$DefaultValue": false
        },
        "BinaryValue": {
            "$kind": "Property",
            "$Type": "Edm.Binary",
            "$MaxLength": 31,
            "$DefaultValue": "T0RhdGE"
        },
        "IntegerValue": {
            "$kind": "Property",
            "$Type": "Edm.Int32",
            "$DefaultValue": -128
        },
        "DoubleValue": {
            "$kind": "Property",
            "$Type": "Edm.Double",
            "$DefaultValue": 3.1415926535897931
        },
        "SingleValue": {
            "$kind": "Property",
            "$Type": "Edm.Single"
        },
        "DecimalValue": {
            "$kind": "Property",
            "$Type": "Edm.Decimal",
            "$Scale": "variable",
            "$DefaultValue": 34.95
        },
        "StringValue": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$DefaultValue": "Say \"Hello\",\nthen go"
        },
        "DateValue": {
            "$kind": "Property",
            "$Type": "Edm.Date",
            "$DefaultValue": "2012-12-03"
        },
        "DateTimeOffsetValue": {
            "$kind": "Property",
            "$Type": "Edm.DateTimeOffset",
            "$DefaultValue": "2012-12-03T07:16:23Z"
        },
        "DurationValue": {
            "$kind": "Property",
            "$Type": "Edm.Duration",
            "$Precision": 12,
            "$DefaultValue": "P12DT23H59M59.999999999999S"
        },
        "TimeOfDayValue": {
            "$kind": "Property",
            "$Type": "Edm.TimeOfDay",
            "$Precision": 6,
            "$DefaultValue": "07:59:59.999"
        },
        "GuidValue": {
            "$kind": "Property",
            "$Type": "Edm.Guid",
            "$DefaultValue": "1234567-89ab-cdef-0123-456789abcdef"
        },
        "Int64Value": {
            "$kind": "Property",
            "$Type": "Edm.Int64",
            "$DefaultValue": 0
        },
        "ColorEnumValue": {
            "$kind": "Property",
            "$Type": "Model1.Color",
            "$DefaultValue": "yellow"
        },
        "GeographyPoint": {
            "$kind": "Property",
            "$Type": "Edm.GeographyPoint",
            "$DefaultValue": "SRID=0;Point(142.1 64.1)"
        },
        "StreamValue": {
            "$kind": "Property",
            "$Type": "Edm.Stream"
        },
        "TypeDefValue": {
            "$kind": "Property",
            "$Type": "Model1.IntegerDecimal",
            "$Precision": 20,
            "$DefaultValue": 42
        },
        "PrimitiveValue": {
            "$kind": "Property",
            "$Type": "Edm.PrimitiveType"
        }
    },
    "Model1.NonNullablePrimitiveTypes": {
        "$kind": "ComplexType",
        "NullValue": {
            "$kind": "Property",
            "$Type": "Edm.Boolean",
            "$DefaultValue": null,
            "$Nullable": false
        },
        "TrueValue": {
            "$kind": "Property",
            "$Type": "Edm.Boolean",
            "$DefaultValue": true,
            "$Nullable": false
        },
        "FalseValue": {
            "$kind": "Property",
            "$Type": "Edm.Boolean",
            "$DefaultValue": false,
            "$Nullable": false
        },
        "BinaryValue": {
            "$kind": "Property",
            "$Type": "Edm.Binary",
            "$MaxLength": 31,
            "$DefaultValue": "T0RhdGE",
            "$Nullable": false
        },
        "IntegerValue": {
            "$kind": "Property",
            "$Type": "Edm.Int32",
            "$DefaultValue": -128,
            "$Nullable": false
        },
        "DoubleValue": {
            "$kind": "Property",
            "$Type": "Edm.Double",
            "$DefaultValue": 3.1415926535897931,
            "$Nullable": false
        },
        "SingleValue": {
            "$kind": "Property",
            "$Type": "Edm.Single",
            "$DefaultValue": "-INF",
            "$Nullable": false
        },
        "DecimalValue": {
            "$kind": "Property",
            "$Type": "Edm.Decimal",
            "$Scale": "variable",
            "$DefaultValue": 34.95,
            "$Nullable": false
        },
        "StringValue": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$DefaultValue": "Say \"Hello\",\nthen go",
            "$Nullable": false
        },
        "DateValue": {
            "$kind": "Property",
            "$Type": "Edm.Date",
            "$DefaultValue": "2012-12-03",
            "$Nullable": false
        },
        "DateTimeOffsetValue": {
            "$kind": "Property",
            "$Type": "Edm.DateTimeOffset",
            "$DefaultValue": "2012-12-03T07:16:23Z",
            "$Nullable": false
        },
        "DurationValue": {
            "$kind": "Property",
            "$Type": "Edm.Duration",
            "$Precision": 12,
            "$DefaultValue": "P12DT23H59M59.999999999999S",
            "$Nullable": false
        },
        "TimeOfDayValue": {
            "$kind": "Property",
            "$Type": "Edm.TimeOfDay",
            "$Precision": 6,
            "$DefaultValue": "07:59:59.999",
            "$Nullable": false
        },
        "GuidValue": {
            "$kind": "Property",
            "$Type": "Edm.Guid",
            "$DefaultValue": "1234567-89ab-cdef-0123-456789abcdef",
            "$Nullable": false
        },
        "Int64Value": {
            "$kind": "Property",
            "$Type": "Edm.Int64",
            "$DefaultValue": 0,
            "$Nullable": false
        },
        "ColorEnumValue": {
            "$kind": "Property",
            "$Type": "Model1.Color",
            "$DefaultValue": "yellow",
            "$Nullable": false
        },
        "GeographyPoint": {
            "$kind": "Property",
            "$Type": "Edm.GeographyPoint",
            "$DefaultValue": "SRID=0;Point(142.1 64.1)",
            "$Nullable": false
        },
        "StreamValue": {
            "$kind": "Property",
            "$Type": "Edm.Stream",
            "$Nullable": false
        },
        "TypeDefValue": {
            "$kind": "Property",
            "$Type": "Model1.IntegerDecimal",
            "$Precision": 20,
            "$DefaultValue": 42,
            "$Nullable": false
        },
        "TextValue": {
            "$kind": "Property",
            "$Type": "Model1.Text",
            "$MaxLength": 60,
            "$DefaultValue": 42,
            "$Nullable": false
        },
        "PrimitiveValue": {
            "$kind": "Property",
            "$Type": "Edm.PrimitiveType",
            "$Nullable": false
        }
    },
    "Model1.CreatedEntities": [
        {
            "$kind": "Function",
            "$Parameter": [
                {
                    "$Name": "before",
                    "$Type": "Edm.DateTimeOffset"
                },
                {
                    "$Name": "after",
                    "$Type": "Edm.DateTimeOffset"
                }
            ],
            "$ReturnType": {
                "$isCollection": true,
                "$Type": "Edm.EntityType"
            }
        }
    ],
    "Model1.TopSellingProducts": [
        {
            "$kind": "Function",
            "$Parameter": [
                {
                    "$Name": "Year",
                    "$Type": "Edm.Decimal",
                    "$Precision": 4,
                    "$Scale": 0
                }
            ],
            "$ReturnType": {
                "$isCollection": true,
                "$Type": "org.example.Product",
                "@A.B": "Works"
            }
        }
    ],
    "Model1.Size": {
        "$kind": "EnumType",
        "S": 0,
        "S@Core.Description": "Small",
        "M": 1,
        "M@Core.Description": "Medium",
        "L": 2,
        "L@Core.Description": "Large",
        "@Core.Description": "T-Shirt Size",
        "@Core.Description#alt": "Size (S, M, L)",
        "@Core.LongDescription": "Size, expressed with letters familiar from e.g. T-Shirt sizes"
    },
    "Model1.Color": {
        "$kind": "EnumType",
        "$UnderlyingType": "Edm.Int64",
        "$IsFlags": true,
        "Yellow": 1,
        "Yellow@Does.Work": true,
        "Yellow@For.Testing": {
            "$IsOf": {
                "$Path": "Hugo"
            },
            "$Type": "Edm.Binary"
        },
        "Striped": 2,
        "Striped@Core.Description": "nicely striped"
    },
    "Model1.Weird": {
        "$kind": "EntityType",
        "$Key": [
            "TheKey"
        ],
        "TheKey": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$Nullable": false
        },
        "TheValue": {
            "$kind": "Property",
            "$Type": "Edm.String"
        },
        "TheString": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "$MaxLength": 20
        },
        "Tags": {
            "$kind": "Property",
            "$isCollection": true,
            "$Type": "Edm.String"
        },
        "Dates": {
            "$kind": "Property",
            "$isCollection": true,
            "$Type": "Edm.Date"
        },
        "Price": {
            "$kind": "Property",
            "$Type": "Edm.Decimal",
            "$Precision": 15,
            "$Scale": 3
        },
        "Permission": {
            "$kind": "Property",
            "$Type": "Org.OData.Core.V1.Permission",
            "$Nullable": false
        },
        "AliasPermission": {
            "$kind": "Property",
            "$Type": "Org.OData.Core.V1.Permission"
        },
        "@Collection.Of.Strings": [
            "SomeString",
            {
                "$Path": "MyAddress/vCard.Address#work/Street"
            },
            {
                "$LabeledElement": "Hello",
                "$Name": "Model1.Attribute"
            },
            {
                "$LabeledElementReference": "Model1.Attribute"
            },
            {
                "$LabeledElement": "Hello",
                "$Name": "Model1.Element"
            },
            {
                "$LabeledElementReference": "Model1.Element"
            }
        ],
        "@Collection.Of.Strings@Core.Description": "String-valued expressions",
        "@Collection.Of.Records": [
            {
                "Egon": "1",
                "Hugo": "2",
                "Hugo@Some.Term": "Some Value",
                "@Some.Term": "Some Value"
            },
            {
                "$LabeledElement": {

                },
                "$Name": "Model1.Record"
            },
            {
                "$LabeledElementReference": "Model1.Record"
            }
        ],
        "@Collection.Of.Records@Core.Description": "Record-valued expressions",
        "@Vocab.GIQSupplier": {
            "$UrlRef": "http://www.odata.org"
        },
        "@Vocab.GIQSupplier#two": {
            "$UrlRef": "http://www.odata.org"
        },
        "@Vocab.GIQSupplier#three": {
            "$UrlRef": {
                "$Apply": [
                    "http://host/service/Suppliers({suppID})",
                    {
                        "$LabeledElement": {
                            "$Apply": [
                                {
                                    "$Path": "@SupplierId"
                                },
                                {
                                    "$DateTimeOffset": "2013-04-08T23:00:00.0Z"
                                }
                            ],
                            "$Function": "odata.UriEncode"
                        },
                        "$Name": "Model1.suppID"
                    }
                ],
                "$Function": "odata.fillUriTemplate"
            }
        },
        "@org.example.display.DisplayName#cast": {
            "$Cast": "Product Catalog",
            "$MaxLength": 30,
            "$Type": "Edm.String"
        },
        "@org.example.display.DisplayName#cast2": {
            "$Cast": 3.14,
            "$Precision": 30,
            "$Scale": "variable",
            "$Type": "Edm.Decimal"
        },
        "@Self.IsFloatingDecimal": {
            "$IsOf": {
                "$Path": "Customer/$count"
            },
            "$Scale": "variable",
            "$Type": "Edm.Decimal"
        },
        "@Some.Binary#two": {
            "$Binary": "Zg"
        },
        "@Some.Binary#twoEqEq": {
            "$Binary": "Zg=="
        },
        "@Some.Binary#three": {
            "$Binary": "Zm8"
        },
        "@Some.Binary#threeEq": {
            "$Binary": "Zm8="
        },
        "@Some.Binary": {
            "$Binary": "HugoHase-_ab"
        }
    },
    "Model1.Address": {
        "$kind": "ComplexType",
        "$OpenType": true,
        "Street": {
            "$kind": "Property",
            "$Type": "Edm.String"
        },
        "City": {
            "$kind": "NavigationProperty",
            "$Type": "Model1.City"
        },
        "Region": {
            "$kind": "NavigationProperty",
            "$Type": "Model1.Region"
        },
        "Country": {
            "$kind": "NavigationProperty",
            "$Type": "Model1.Country"
        },
        "MapLocation": {
            "$kind": "Property",
            "$Type": "Edm.GeographyPoint",
            "$SRID": "variable"
        },
        "Numbers": {
            "$kind": "Property",
            "$isCollection": true,
            "$Type": "Edm.Int16"
        }
    },
    "Model1.City": {
        "$kind": "EntityType"
    },
    "Model1.Region": {
        "$kind": "EntityType"
    },
    "Model1.Country": {
        "$kind": "EntityType"
    },
    "Model1.Planet": {
        "$kind": "EntityType"
    },
    "Model1.NavigationOnly": {
        "$kind": "ComplexType",
        "Planet": {
            "$kind": "NavigationProperty",
            "$Type": "Model1.Planet"
        }
    },
    "Model1.AnnotationOnly": {
        "$kind": "ComplexType",
        "@Some.Tag": true
    },
    "Model1.Order": {
        "$kind": "EntityType",
        "$Abstract": true,
        "Quantity": {
            "$kind": "Property",
            "$Type": "Edm.Decimal",
            "@Measures.Unit": {
                "$Path": "ShippingUnit"
            }
        },
        "ShippingUnit": {
            "$kind": "Property",
            "$Type": "Edm.String",
            "@Core.Description": "Contains the unit for property Quantity"
        }
    },
    "Model1.SpecialByte": {
        "$kind": "TypeDefinition",
        "$UnderlyingType": "Edm.Byte"
    },
    "Model1.Text50": {
        "$kind": "TypeDefinition",
        "$MaxLength": 50,
        "$UnderlyingType": "Edm.String"
    },
    "Model1.Text": {
        "$kind": "TypeDefinition",
        "$UnderlyingType": "Edm.String"
    },
    "Model1.LanguageDependentText": {
        "$kind": "TypeDefinition",
        "$UnderlyingType": "Edm.String",
        "@Core.IsLanguageDependent": true,
        "@Core.IsLanguageDependent@Core.DefaultLanguage": "en-US"
    },
    "Model1.IntegerDecimal": {
        "$kind": "TypeDefinition",
        "$UnderlyingType": "Edm.Decimal",
        "$Scale": 0,
        "@Core.Description": "A decimal without fractional part"
    },
    "Model1.IntegerDecimal10": {
        "$kind": "TypeDefinition",
        "$UnderlyingType": "Edm.Decimal",
        "$Precision": 10,
        "@Core.Description": "A ten-digit integer"
    },
    "Model1.VariableDecimal": {
        "$kind": "TypeDefinition",
        "$UnderlyingType": "Edm.Decimal",
        "$Scale": "variable",
        "@Core.Description": "A floating decimal"
    },
    "Model1.ExactTimestamp": {
        "$kind": "TypeDefinition",
        "$UnderlyingType": "Edm.DateTimeOffset",
        "$Precision": 12
    },
    "X.Person": {
        "$kind": "Term",
        "$Type": "X.PersonType"
    },
    "X.PersonType": {
        "$kind": "ComplexType"
    },
    "X.Team": {
        "$kind": "Term",
        "$isCollection": true,
        "$Type": "X.PersonType",
        "@custom.ItemIsA": "X.Person"
    },
    "X.Movie": {
        "$kind": "Term",
        "$Type": "X.MovieType",
        "$Nullable": false
    },
    "X.MovieType": {
        "$kind": "ComplexType"
    },
    "X.Friend": {
        "$kind": "Term",
        "$Type": "X.FriendType"
    },
    "X.FriendType": {
        "$kind": "EntityType"
    },
    "Y.Developer": {
        "$kind": "Term",
        "$BaseTerm": "X.Person",
        "$Type": "Y.DeveloperType",
        "$Nullable": false
    },
    "Y.DeveloperType": {
        "$kind": "ComplexType",
        "$BaseType": "X.PersonType"
    },
    "Y.DevelopmentTeam": {
        "$kind": "Term",
        "$isCollection": true,
        "$Type": "Y.DeveloperType",
        "@custom.ItemIsA": "Y.Developer",
        "@custom.IsA": "X.Team"
    },
    "Y.ScrumTeam": {
        "$kind": "Term",
        "$BaseTerm": "Y.DevelopmentTeam",
        "$Type": "Y.ScrumTeamType"
    },
    "Y.ScrumTeamType": {
        "$kind": "ComplexType",
        "ScrumMaster": {
            "$kind": "Property",
            "$Type": "Y.DeveloperType",
            "@custom.IsA": "Y.Developer X.Person"
        }
    },
    "Y.Movies": {
        "$kind": "Term",
        "$isCollection": true,
        "$Type": "X.MovieType"
    },
    "Y.ArchivedMovies": {
        "$kind": "Term",
        "$isCollection": true,
        "$Type": "Y.ArchivedMovieType",
        "@custom.ItemIsA": "X.Movie"
    },
    "Y.ArchivedMovieType": {
        "$kind": "ComplexType",
        "$BaseType": "X.MovieType",
        "@custom.IsA": "X.Movie",
        "ArchivedAt": {
            "$kind": "Property",
            "$Type": "Edm.Date"
        }
    },
    "Y.SomeThing": {
        "$kind": "Term",
        "$Type": "Y.SomeThingType"
    },
    "Y.SomeThingType": {
        "$kind": "ComplexType",
        "SomeProperty": {
            "$kind": "Property",
            "$Type": "Edm.String"
        },
        "Contacts": {
            "$kind": "Property",
            "$isCollection": true,
            "$Type": "X.PersonType",
            "@custom.ItemIsA": "X.Person"
        },
        "VIPs": {
            "$kind": "NavigationProperty",
            "$isCollection": true,
            "$Type": "X.FriendType",
            "@custom.ItemIsA": "X.Friend"
        }
    },
    "Y.AdvancedChangeTracking": {
        "$kind": "Term",
        "$BaseTerm": "Capabilities.ChangeTracking",
        "$Type": "Y.ChangeTrackingType",
        "$AppliesTo": "EntityContainer EntitySet",
        "$Nullable": false,
        "@Core.Description": "Advanced change tracking capabilities of this service or entity set"
    },
    "Y.ChangeTrackingType": {
        "$kind": "ComplexType",
        "InlineableStreamProperties": {
            "$kind": "Property",
            "$isCollection": true,
            "$Type": "Edm.PropertyPath",
            "@Core.Description": "Change tracking supports inlining these stream properties"
        }
    },
    "org.example.DemoService": {
        "$kind": "EntityContainer",
        "StandardCustomers": {
            "$kind": "EntitySet",
            "$Type": "org.example.Customer",
            "$NavigationPropertyBinding": {
                "Orders": "Orders"
            }
        },
        "PreferredCustomers": {
            "$kind": "EntitySet",
            "$Type": "org.example.Customer",
            "$NavigationPropertyBinding": {
                "Orders": "Orders"
            }
        },
        "Orders": {
            "$kind": "EntitySet",
            "$Type": "org.example.Order"
        },
        "Products": {
            "$kind": "EntitySet",
            "$Type": "org.example.Product",
            "$NavigationPropertyBinding": {
                "Category": "Self.DemoService.Categories",
                "Supplier": "Self.DemoService.Suppliers"
            },
            "@org.example.display.DisplayName": "Product Catalog"
        },
        "Categories": {
            "$kind": "EntitySet",
            "$Type": "org.example.Category",
            "$NavigationPropertyBinding": {
                "Products": "Self.DemoService.Products"
            }
        },
        "Suppliers": {
            "$kind": "EntitySet",
            "$Type": "org.example.Supplier",
            "$NavigationPropertyBinding": {
                "Products": "Self.DemoService.Products"
            },
            "@org.example.display.DisplayName": "Supplier Directory"
        },
        "Categories34": {
            "$kind": "EntitySet",
            "$Type": "org.example.Category",
            "$NavigationPropertyBinding": {
                "Products": "Products"
            }
        },
        "Categories35": {
            "$kind": "EntitySet",
            "$Type": "org.example.Category",
            "$NavigationPropertyBinding": {
                "Products": "org.example.DemoService/Products"
            }
        },
        "Contoso": {
            "$kind": "Singleton",
            "$Type": "org.example.Supplier"
        },
        "TopSellingProducts": {
            "$kind": "FunctionImport",
            "$Function": "Model1.TopSellingProducts",
            "$EntitySet": "Products"
        }
    }
}
