<?xml version="1.0" encoding="UTF-8"?>
<TestSuite xmlns="http://docs.oasis-open.org/odata/ns/testcases">
  <DisableTrace Rule="odataIdentifier" />
  <DisableTrace Rule="identifierLeadingCharacter" />
  <DisableTrace Rule="identifierCharacter" />
  <DisableTrace Rule="ALPHA" />
  <DisableTrace Rule="DIGIT" />

  <Constraint Rule="action">
  </Constraint>
  <Constraint Rule="actionImport">
  </Constraint>
  <Constraint Rule="complexColProperty">
    <Match>Details</Match>
  </Constraint>
  <Constraint Rule="complexColFunction">
  </Constraint>
  <Constraint Rule="complexColFunctionImport">
  </Constraint>
  <Constraint Rule="complexFunction">
  </Constraint>
  <Constraint Rule="complexFunctionImport">
  </Constraint>
  <Constraint Rule="complexProperty">
  </Constraint>
  <Constraint Rule="complexTypeName">
  </Constraint>
  <Constraint Rule="customName">
  </Constraint>
  <Constraint Rule="entityColFunction">
    <Match>Magic</Match>
  </Constraint>
  <Constraint Rule="entityColFunctionImport">
  </Constraint>
  <Constraint Rule="entityColNavigationProperty">
    <Match>Items</Match>
    <Match>Orders</Match>
    <Match>Products</Match>
    <Match>Sales</Match>
  </Constraint>
  <Constraint Rule="entityColFunction">
  </Constraint>
  <Constraint Rule="entityColFunctionImport">
  </Constraint>
  <Constraint Rule="entityFunction">
  </Constraint>
  <Constraint Rule="entityFunctionImport">
  </Constraint>
  <Constraint Rule="entityNavigationProperty">
    <Match>Category</Match>
    <Match>Continent</Match>
    <Match>Country</Match>
    <Match>Currency</Match>
    <Match>Customer</Match>
    <Match>Product</Match>
    <Match>ProductGroup</Match>
    <Match>Time</Match>
  </Constraint>
  <Constraint Rule="entitySetName">
    <Match>Categories</Match>
    <Match>Customers</Match>
    <Match>Products</Match>
    <Match>Sales</Match>
    <Match>SalesOrganizations</Match>
    <Match>Time</Match>
  </Constraint>
  <Constraint Rule="entityTypeName">
  </Constraint>
  <Constraint Rule="enumerationMember">
  </Constraint>
  <Constraint Rule="enumerationTypeName">
  </Constraint>
  <Constraint Rule="keyPropertyAlias">
  </Constraint>
  <Constraint Rule="lambdaVariableExpr">
  </Constraint>
  <Constraint Rule="namespacePart">
    <Match>Aggregation</Match>
    <Match>Custom</Match>
  </Constraint>
  <Constraint Rule="primitiveColFunction">
  </Constraint>
  <Constraint Rule="primitiveColFunctionImport">
  </Constraint>
  <Constraint Rule="primitiveColProperty">
  </Constraint>
  <Constraint Rule="primitiveFunction">
    <Match>isroot</Match>
    <Match>isleaf</Match>
    <Match>isancestor</Match>
    <Match>issibling</Match>
    <Match>isdescendant</Match>
  </Constraint>
  <Constraint Rule="primitiveFunctionImport">
  </Constraint>
  <Constraint Rule="primitiveKeyProperty">
    <Match>Code</Match>
    <Match>Date</Match>
    <Match>ID</Match>
  </Constraint>
  <Constraint Rule="primitiveNonKeyProperty">
    <Match>Amount</Match>
    <Match>City</Match>
    <Match>Cost</Match>
    <Match>CountryCode</Match>
    <Match>Month</Match>
    <Match>Name</Match>
    <Match>Population</Match>
    <Match>Price</Match>
    <Match>Quantity</Match>
    <Match>Revenue</Match>
    <Match>SalesArea</Match>
    <Match>Shipped</Match>
    <Match>Status</Match>
    <Match>Street</Match>
    <Match>SumAmount</Match>
    <Match>TaxRate</Match>
  </Constraint>
  <Constraint Rule="streamProperty">
  </Constraint>
 
  <TestCase Name="Aggregation - basic" Rule="queryOptions">
    <Input>$apply=aggregate(Amount)</Input>
  </TestCase>
  <TestCase Name="Aggregation - alias" Rule="queryOptions">
    <!-- TODO: parens around expression should be unnecessary -->
    <Input>$apply=aggregate(Amount as TotalAmount)</Input>
  </TestCase>
  <TestCase Name="Aggregation - expression" Rule="queryOptions">
    <Input>$apply=aggregate(Amount mul Product/TaxRate as Tax)</Input>
  </TestCase>
  <TestCase Name="Aggregation - expression after path" Rule="queryOptions">
    <Input>$apply=aggregate(Sales(Amount mul Product/TaxRate as Tax))</Input>
  </TestCase>
  <TestCase Name="Aggregation - aggregation function" Rule="queryOptions">
    <Input>$apply=aggregate(Amount with max as MaxAmount)</Input>
  </TestCase>
  <TestCase Name="Aggregation - aggregation function and alias" Rule="queryOptions">
    <Input>$apply=aggregate(Product with countdistinct as DistinctProducts)</Input>
  </TestCase>
  <TestCase Name="Aggregation - aggregation function" Rule="queryOptions">
    <Input>$apply=aggregate(Amount as DailyAverage from Time with average)</Input>
  </TestCase>
  <TestCase Name="Aggregation - $count" Rule="queryOptions">
    <Input>$apply=aggregate($count as SalesCount)</Input>
  </TestCase>
  <TestCase Name="Aggregation - $count does not allow with" Rule="queryOptions" FailAt="24">
    <Input>$apply=aggregate($count with sum as SalesCount)</Input>
  </TestCase>
  <TestCase Name="Aggregation - topcount" Rule="queryOptions">
    <Input>$apply=topcount(2,Amount)</Input>
  </TestCase>
  <TestCase Name="Aggregation - topsum" Rule="queryOptions">
    <Input>$apply=topsum(15,Amount)</Input>
  </TestCase>
  <TestCase Name="Aggregation - toppercent" Rule="queryOptions">
    <Input>$apply=toppercent(50,Amount)</Input>
  </TestCase>
  <TestCase Name="Aggregation - bottomcount" Rule="queryOptions">
    <Input>$apply=bottomcount(2,Amount)</Input>
  </TestCase>
  <TestCase Name="Aggregation - bottomsum" Rule="queryOptions">
    <Input>$apply=bottomsum(15,Amount)</Input>
  </TestCase>
  <TestCase Name="Aggregation - bottompercent" Rule="queryOptions">
    <Input>$apply=bottompercent(50,Amount)</Input>
  </TestCase>
  <TestCase Name="Aggregation - identity" Rule="queryOptions">
    <Input>$apply=identity</Input>
  </TestCase>
  <TestCase Name="Aggregation - concat" Rule="queryOptions">
    <Input>$apply=concat(topcount(2,Amount),bottomcount(2,Amount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - groupby" Rule="queryOptions">
    <Input>$apply=groupby((Customer/Country,Product/Name),aggregate(Amount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - groupby distinct" Rule="queryOptions">
    <Input>$apply=groupby((Product/Name,Amount),aggregate())</Input>
  </TestCase>
  <TestCase Name="Aggregation - groupby rollup" Rule="queryOptions">
    <Input>$apply=groupby((rollup(Customer/Country,Customer/Name),rollup(Product/ProductGroup/Name,Product/Name),Currency/Code),aggregate(Amount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - filter" Rule="queryOptions">
    <Input>$apply=filter(Amount gt 3)</Input>
  </TestCase>
  <TestCase Name="Aggregation - expand" Rule="queryOptions">
    <Input>$apply=expand(Sales,Amount gt 3)</Input>
  </TestCase>
  <TestCase Name="Aggregation - search" Rule="queryOptions">
    <Input>$apply=search(Hugo)</Input>
  </TestCase>
  <TestCase Name="Aggregation - on entity container" Rule="odataRelativeUri">
    <Input>$crossjoin(Products,Time,Sales)?$apply=groupby((Products/Name,Time/Date),aggregate(Sales/Amount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - hierarchy functions - isroot" Rule="odataRelativeUri">
    <Input>SalesOrganizations?$filter=$it/Aggregation.isroot(Hierarchy='SaM.SalesOrgHierarchy')</Input>
  </TestCase>
  <TestCase Name="Aggregation - hierarchy functions - isdescendant" Rule="odataRelativeUri">
    <Input>SalesOrganizations?$filter=$it/Aggregation.isdescendant(Hierarchy='SaM.SalesOrgHierarchy',Node='EMEA')</Input>
  </TestCase>
  <TestCase Name="Aggregation - hierarchy functions - isdescendant" Rule="odataRelativeUri">
    <Input>SalesOrganizations?$filter=$it/Aggregation.isdescendant(Hierarchy='SaM.SalesOrgHierarchy',Node='EMEA',MaxDistance=1)</Input>
  </TestCase>
  <TestCase Name="Aggregation - hierarchy functions - isancestor" Rule="odataRelativeUri">
    <Input>SalesOrganizations?$filter=$it/Aggregation.isancestor(Hierarchy='SaM.SalesOrgHierarchy',Node='EMEA')</Input>
  </TestCase>
  <TestCase Name="Aggregation - hierarchy functions - isancestor" Rule="odataRelativeUri">
    <Input>SalesOrganizations?$filter=$it/Aggregation.isancestor(Hierarchy='SaM.SalesOrgHierarchy',Node='EMEA',MaxDistance=1)</Input>
  </TestCase>
  <TestCase Name="Aggregation - hierarchy functions - issibling" Rule="odataRelativeUri">
    <Input>SalesOrganizations?$filter=$it/Aggregation.issibling(Hierarchy='SaM.SalesOrgHierarchy',Node='EMEA')</Input>
  </TestCase>
  <TestCase Name="Aggregation - hierarchy functions - isleaf" Rule="odataRelativeUri">
    <Input>SalesOrganizations?$filter=$it/Aggregation.isleaf(Hierarchy='SaM.SalesOrgHierarchy')</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="odataRelativeUri">
    <Input>Customers?$apply=groupby((Name),aggregate())</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Customer/Name),aggregate())</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Customer/Name,Customer/ID),aggregate())</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Customer),aggregate())</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Customer/Name,Customer/ID,Product/Name),aggregate())</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Name),aggregate(Sales/Amount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Name),aggregate(Sales(Amount as TotalAmount)))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Name),aggregate(Sales(Revenue sub Cost as Profit)))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Name),aggregate(Revenue sub Cost as Profit))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Name,Sales/Currency/Code),aggregate(Sales/Amount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Country,Sales/Product/Name),aggregate())</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Customer/Country),aggregate(Amount with sum as TotalAmount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Customer/Country),aggregate(Amount with sum))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Customer/Country),aggregate(Amount as TotalAmount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Customer/Country),aggregate(Amount with min as MinAmount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Customer/Country),aggregate(Amount with max as MaxAmount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Customer/Country),aggregate(Amount with average as AverageAmount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Name),aggregate(Sales/$count as SalesCount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Name),aggregate(Sales($count as SalesCount)))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Name),aggregate(Sales/$count as SalesCount,Sales(Amount as TotalAmount)))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Customer/Country),aggregate(Sales/Amount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Customer/Country),aggregate(Sales/Amount with sum))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples - alias required" Rule="queryOptions" FailAt="66">
    <Input>$apply=groupby((Customer/Country),aggregate(Sales/Amount with sum from Time with average))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples - alias required" Rule="queryOptions" FailAt="66">
    <Input>$apply=groupby((Customer/Country),aggregate(Sales(Amount with sum from Time with average)))</Input>
  </TestCase>
  <TestCase Name="Aggregation - collection of complex type" Rule="queryOptions">
    <Input>$apply=groupby((Product),aggregate(Details/Amount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Customer/Country),aggregate(Amount with sum as TotalAmount,Amount with average as AvgAmt))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Name),aggregate(Sales(Amount with sum as TotalAmount),Sales(Amount with average as AvgAmt)))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Customer/Country,Product/Name),concat(aggregate(Amount),topcount(1,Amount)))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Product/ID,Product/Name,Time/Month),aggregate(Amount with sum as SumAmount))/groupby((Product/ID,Product/Name),aggregate(SumAmount with average as AverageAmount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Product/ID,Product/Name),aggregate(Amount with sum as MonthlyAverage from Time/Month with average))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((rollup($all,Customer/Country,Customer/ID),Currency/Code),aggregate(Amount as AverageAmount from Customer/ID with average from Customer/Country with average))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=filter(Amount le 1)/aggregate(Amount)</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=filter(Amount le 2)/groupby((Product/Name),aggregate(Amount))&amp;$filter=Amount ge 4</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Continent/Name,Country/Name),aggregate(Population))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=filter(Population ge 10000000)/groupby((Continent/Name,Country/Name),aggregate(Population))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Continent/Name,Country/Name),aggregate(Population))/filter(Population ge 10000000)/concat(identity,groupby((Continent/Name),aggregate(Population)))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Continent/Name,Country/Name),aggregate(Population))/filter(Population ge 10000000)/groupby((rollup(Continent/Name,Country/Name)),aggregate(Population))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=groupby((Continent/Name,Country/Name),aggregate(Population))/concat(filter(Population ge 10000000),groupby((Continent/Name),aggregate(Population)))</Input>
  </TestCase>
  <TestCase Name="Aggregation - Examples" Rule="queryOptions">
    <Input>$apply=filter(Status eq 'incomplete')/expand(Items,not Shipped)/groupby((Customer/Country),aggregate(Items/Amount))</Input>
  </TestCase>
  <TestCase Name="Aggregation - isdefined" Rule="queryOptions">
    <Input>$filter=isdefined(Sales/Amount) and isdefined(Customer/Name)</Input>
  </TestCase>
  <TestCase Name="Aggregation - custom function" Rule="queryOptions">
    <Input>$apply=aggregate(Amount)/Custom.Magic(Rule=1)</Input>
  </TestCase>
  <!-- TODO: experimental path segment
  <TestCase Name="Aggregation - Examples" Rule="collectionNavigation">
    <Input>/$apply(groupby((Name),aggregate(Sales/Amount)))</Input>
  </TestCase>
    <TestCase Name="Aggregation - Examples" Rule="collectionNavigation">
    <Input>/$apply(@pipe)?@pipe=groupby((Name),aggregate(Sales/Amount))</Input>
  </TestCase>
  -->
</TestSuite>