<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx xmlns:edmx="http://docs.oasis-open.org/odata/ns/edmx" Version="4.0">
	<edmx:Reference Uri="http://docs.oasis-open.org/odata/odata/v4.0/cs01/vocabularies/Org.OData.Core.V1.xml">
		<edmx:Include Namespace="Org.OData.Core.V1" Alias="Core" />
	</edmx:Reference>
	<edmx:DataServices>
		<Schema xmlns="http://docs.oasis-open.org/odata/ns/edm" Namespace="Org.OData.Aggregation.V1"
			Alias="Aggregation">
			<Annotation Term="Core.Description">
				<String>Terms to describe which data in a given entity model can be aggregated, and how.</String>
			</Annotation>

			<Term Name="SupportsApply" Type="Aggregation.SupportsApplyType" AppliesTo="EntitySet EntityContainer">
				<Annotation Term="Core.Description">
					<String>This entity set or entity container supports the $apply system query option.</String>
				</Annotation>
			</Term>

			<ComplexType Name="SupportsApplyType">
				<Property Name="SupportsCount" DefaultValue="true" Type="Edm.Boolean">
					<Annotation Term="Core.Description"
						String="The virtual property $count can be used in the aggregate transformation" />
				</Property>
				<Property Name="SupportedTransformations" Type="Collection(Edm.String)">
					<Annotation Term="Core.Description" String="Transformations that can be used in $apply" />
				</Property>
				<Property Name="AggregatableProperties" Type="Collection(Aggregation.AggregatableProperty)">
					<Annotation Term="Core.Description" String="Properties that can be used in the aggregate transformation" />
				</Property>
				<Property Name="GroupableProperties" Type="Collection(Aggregation.GroupableProperty)">
					<Annotation Term="Core.Description" String="Properties that can be used in the groupby transformation" />
				</Property>
				<Property Name="SupportsMultipleRollupHierarchies" DefaultValue="true" Type="Edm.Boolean">
					<Annotation Term="Core.Description"
						String="The service supports more than one rollup hierarchy in a groupby transformation" />
				</Property>
			</ComplexType>

			<ComplexType Name="AggregatableProperty">
				<Property Name="Name" Type="Edm.PropertyPath" />
				<Property Name="DefaultAggregrationMethod" Type="Edm.String" Nullable="true" />
				<Property Name="SupportedAggregrationMethods" Type="Collection(Aggregation.SupportedAggregationMethod)" />
			</ComplexType>

			<ComplexType Name="SupportedAggregationMethod">
				<Property Name="Name" Type="Edm.String" />
				<Property Name="RequiredGroupingProperties" Type="Collection(Edm.PropertyPath)" />
        <!-- TODO: are the UnsupportedGroupingProperties necessary? Use cases? -->
				<Property Name="UnsupportedGroupingProperties" Type="Collection(Edm.PropertyPath)" />
			</ComplexType>

			<ComplexType Name="GroupableProperty">
				<Property Name="Name" Type="Edm.PropertyPath" />
				<Property Name="DependentProperties" Type="Collection(Edm.PropertyPath)" />
			</ComplexType>

			<Term Name="LeveledHierarchy" Type="Collection(Edm.PropertyPath)" AppliesTo="EntityType">
				<Annotation Term="Core.Description"
					String="Defines a leveled hierarchy by defining an ordered list of properties in the hierarchy " />
			</Term>

			<Term Name="RecursiveHierarchy" Type="Aggregation.RecursiveHierarchyType" AppliesTo="EntityType">
				<Annotation Term="Core.Description" String="Defines a recursive hierarchy." />
			</Term>

			<ComplexType Name="RecursiveHierarchyType">
				<Property Name="NodeProperty" Type="Edm.PropertyPath" Nullable="false" />
				<Property Name="ParentNodeProperty" Type="Edm.PropertyPath" Nullable="true" />
				<Property Name="HierarchyLevelProperty" Type="Edm.PropertyPath" Nullable="true" />
				<Property Name="IsLeafProperty" Type="Edm.PropertyPath" Nullable="true">
					<Annotation Term="Core.RequiresType" String="Edm.Boolean" />
				</Property>
			</ComplexType>

			<Term Name="AvailableOnAggregates" Type="Aggregation.AvailableOnAggregatesType" AppliesTo="Action Function">
				<Annotation Term="Core.Description"
					String="This Action or Function is available on aggregated entities, as long as the RequiredProperties are still available" />
			</Term>

			<ComplexType Name="AvailableOnAggregatesType">
				<Property Name="RequiredProperties" Type="Collection(Edm.PropertyPath)" />
			</ComplexType>

			<Function Name="isroot" ReturnType="Edm.Boolean" IsBound="true">
				<Annotation Term="Core.Description"
					String="Returns true, if and only if the value of the node property of the specified hierarchy is the root of the hierarchy." />
				<Parameter Name="Entity" Type="Edm.EntityType" Nullable="false" />
				<Parameter Name="Hierarchy" Type="Edm.String" Nullable="false" />
			</Function>

			<Function Name="isdescendant" ReturnType="Edm.Boolean" IsBound="true">
				<Annotation Term="Core.Description"
					String="Returns true, if and only if the value of the node property of the specified hierarchy is a descendant of the given parent node with a distance of less than or equal to the optionally specified maximum distance." />
				<Parameter Name="Entity" Type="Edm.EntityType" Nullable="false" />
				<Parameter Name="Hierarchy" Type="Edm.String" Nullable="false" />
				<Parameter Name="Node" Type="Edm.PrimitiveType" Nullable="false" />
				<Parameter Name="MaxDistance" Type="Edm.Int16" />
			</Function>

			<Function Name="isancestor" ReturnType="Edm.Boolean" IsBound="true">
				<Annotation Term="Core.Description"
					String="Returns true, if and only if the value of the node property of the specified hierarchy is an ancestor of the given child node with a distance of less than or equal to the optionally specified maximum distance." />
				<Parameter Name="Entity" Type="Edm.EntityType" Nullable="false" />
				<Parameter Name="Hierarchy" Type="Edm.String" Nullable="false" />
				<Parameter Name="Node" Type="Edm.PrimitiveType" Nullable="false" />
				<Parameter Name="MaxDistance" Type="Edm.Int16" />
			</Function>

			<Function Name="issibling" ReturnType="Edm.Boolean" IsBound="true">
				<Annotation Term="Core.Description"
					String="Returns true, if and only if the value of the node property of the specified hierarchy has the same parent node as the specified node." />
				<Parameter Name="Entity" Type="Edm.EntityType" Nullable="false" />
				<Parameter Name="Hierarchy" Type="Edm.String" Nullable="false" />
				<Parameter Name="Node" Type="Edm.PrimitiveType" Nullable="false" />
			</Function>

			<Function Name="isleaf" ReturnType="Edm.Boolean" IsBound="true">
				<Annotation Term="Core.Description"
					String="Returns true, if and only if the value of the node property of the specified hierarchy has no descendants." />
				<Parameter Name="Entity" Type=" Edm.EntityType" Nullable="false" />
				<Parameter Name="Hierarchy" Type="Edm.String" Nullable="false" />
			</Function>

		</Schema>
	</edmx:DataServices>
</edmx:Edmx>
