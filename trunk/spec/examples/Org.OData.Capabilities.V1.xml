<?xml version="1.0" encoding="utf-8"?>
<Schema xmlns="http://docs.oasis-open.org/odata/ns/csdl/4.0" Alias="Self"
  Namespace="Org.OData.Communication.V1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://docs.oasis-open.org/odata/ns/csdl/4.0 ../schemas/csdl.xsd"
>
  <Documentation>
    <Summary>
      The Capabilities vocabulary aims to provide a way for service authors to describe
      certain capabilities of an OData Service.
    </Summary>
    <LongDescription>
      There are some capabilities which are strongly recommended for services to support even
      though they are optional. Support for $top and $skip is a good example as supporting
      these query options helps with performance of a service and are essential. Such
      capabilities are assumed to be default capabilities of an OData service even in the
      case that a capabilities annotation doesn’t exist. Capabilities annotations are
      mainly expected to be used to explicitly specify that a service doesn’t support such
      capabilities. Capabilities annotations can as well be used to declaratively specify
      the support of such capabilities.
    
      On the other hand, there are some capabilities that a service may choose to support or
      not support and in varying degrees. $filter and $orderby are such good examples.
      This vocabulary aims to define terms to specify support or no support for such
      capabilities.

      A service is assumed to support by default the following capabilities even though an 
      annotation doesn’t exist:
      - Countability ($count, $inlinecount)
      - Client pageability ($top, $skip)
      - Expandability ($expand)
      - Indexability by key
      - Batch support ($batch)
      - Navigability of navigation properties
      
      A service is expected to support the following capabilities. If not supported, the service
      is expected to call out the restrictions using annotations:
      - Filterability ($filter)
      - Sortability ($orderby)
      - Queryability of top level entity sets
      - Query functions
      
      A client cannot assume that a service supports certain capabilities. A client can try, but 
      it needs to be prepared to handle an error in case the following capabilities are not supported:
      - Insertability
      - Updatability
      - Deletability 
    </LongDescription>
  </Documentation>

  <Using Alias="Core" Namespace="Org.OData.Core.V1" />


  <ValueTerm Name="InsertRestrictions" Type="Self.InsertRestrictionsType">
    <Documentation>
      <Summary>Entities can be added to this set</Summary>
    </Documentation>
    <ValueAnnotation Term="Core.AppliesToEntitySet" />
  </ValueTerm>

  <ComplexType Name="InsertRestrictionsType">
    <Property Name="Insertable" Type="Edm.Boolean">
      <Documentation>
        <Summary>
          If “true”, the targeted EntitySet is insertable.
          If “false”, the targeted EntitySet is not insertable.
        </Summary>
      </Documentation>
    </Property>
    <Property Name="NonInsertableProperties" Type="Collection(Edm.String)" Nullable="true">
      <Documentation>
        <Summary>
          These properties SHOULD be omitted from POST requests because the server
          will ignore their values.
        </Summary>
      </Documentation>
      <ValueAnnotation Term="Core.IsPropertyPath"/>
    </Property>
    <Property Name="NonInsertableNavigationProperties" Type="Collection(Edm.String)" Nullable="true">
      <Documentation>
        <Summary>
          These navigation properties do not allow InsertLink requests.
        </Summary>
      </Documentation>
      <ValueAnnotation Term="Core.IsPropertyPath"/>
    </Property>
  </ComplexType>
  

  <ValueTerm Name="UpdateRestrictions" Type="Self.UpdateRestrictionsType">
    <Documentation>
      <Summary>Entities of this set can be changed</Summary>
    </Documentation>
    <ValueAnnotation Term="Core.AppliesToEntitySet" />
  </ValueTerm>

  <ComplexType Name="UpdateRestrictionsType">
    <Property Name="Updatable" Type="Edm.Boolean">
      <Documentation>
        <Summary>
          If “true”, the targeted EntitySet is updatable.
          If “false”, the targeted EntitySet is not updatable.
        </Summary>
      </Documentation>
    </Property>
    <Property Name="NonUpdatableProperties" Type="Collection(Edm.String)" Nullable="true">
      <Documentation>
        <Summary>
          These properties SHOULD be omitted from PUT or PATCH requests because the server will ignore their values.
          They do not allow UpdateValue and DeleteValue requests.
        </Summary>
      </Documentation>
      <ValueAnnotation Term="Core.IsPropertyPath"/>
    </Property>
    <Property Name="NonUpdatableNavigationProperties" Type="Collection(Edm.String)" Nullable="true">
      <Documentation>
        <Summary>
          These navigation properties do not allow UpdateLink requests.
        </Summary>
      </Documentation>
      <ValueAnnotation Term="Core.IsPropertyPath"/>
    </Property>
  </ComplexType>


  <ValueTerm Name="DeleteRestrictions" Type="Self.DeleteRestrictionsType">
    <Documentation>
      <Summary>Entities can be removed from this set</Summary>
    </Documentation>
    <ValueAnnotation Term="Core.AppliesToEntitySet" />
  </ValueTerm>

  <ComplexType Name="DeleteRestrictionsType">
    <Property Name="Deletable" Type="Edm.Boolean">
      <Documentation>
        <Summary>
          If “true”, the targeted EntitySet is deletable.
          If “false”, the targeted EntitySet is not deletable.
        </Summary>
      </Documentation>
    </Property>
    <Property Name="NonDeletableNavigationProperties" Type="Collection(Edm.String)" Nullable="true">
      <Documentation>
        <Summary>
          These navigation properties do not allow DeleteLink requests.
        </Summary>
      </Documentation>
      <ValueAnnotation Term="Core.IsPropertyPath"/>
    </Property>
  </ComplexType>
  
  
  <ValueTerm Name="Countable" Type="Edm.Boolean" DefaultValue="true">
    <Documentation>
      <Summary>Entity set supports /$count path suffix and $inlinecount=allpages system query option</Summary>
    </Documentation>
    <ValueAnnotation Term="Core.AppliesToEntitySet" />
  </ValueTerm>

  <ValueTerm Name="Queryable" Type="Edm.Boolean" DefaultValue="true">
    <Documentation>
      <Summary>
        If true, the entity set can be directly queried as a top level set.
        If false, entities in this set can only be accessed via relationships or functions.
      </Summary>
    </Documentation>
    <ValueAnnotation Term="Core.AppliesToEntitySet" />
  </ValueTerm>

  <ValueTerm Name="ClientPagable" Type="Edm.Boolean" DefaultValue="true">
    <Documentation>
      <Summary>Entity set supports $top and $skip</Summary>
    </Documentation>
    <ValueAnnotation Term="Core.AppliesToEntitySet" />
  </ValueTerm>

  <ValueTerm Name="Expandable" Type="Edm.Boolean" DefaultValue="true">
    <Documentation>
      <Summary>Supports $expand system query option</Summary>
    </Documentation>
    <ValueAnnotation Term="Core.AppliesToNavigationProperty" />
  </ValueTerm>

  <ValueTerm Name="Navigable" Type="Edm.Boolean" DefaultValue="true">
    <Documentation>
      <Summary>Can be used in resource paths</Summary>
    </Documentation>
    <ValueAnnotation Term="Core.AppliesToNavigationProperty" />
  </ValueTerm>

  <ValueTerm Name="IndexableByKey" Type="Edm.Boolean" DefaultValue="true">
    <Documentation>
      <Summary>
        Entities in this set can be addressed by key value(s) according to OData URL conventions
      </Summary>
    </Documentation>
    <ValueAnnotation Term="Core.AppliesToEntitySet" />
  </ValueTerm>

  <ValueTerm Name="BatchSupported" Type="Edm.Boolean" DefaultValue="true">
    <Documentation>
      <Summary>Entity container supports $batch requests</Summary>
    </Documentation>
    <ValueAnnotation Term="Core.AppliesToEntityContainer" />
  </ValueTerm>

  <ValueTerm Name="QueryFunctions" Type="Collection(Edm.String)">
    <Documentation>
      <Summary>List of supported query functions</Summary>
    </Documentation>
    <ValueAnnotation Term="Core.AppliesToEntityContainer" />
  </ValueTerm>


  <ValueTerm Name="FilterRestrictions" Type="Self.FilterRestrictionsType">
    <Documentation>
      <Summary>Restrictions on $filter expressions for this entity set</Summary>
    </Documentation>
    <ValueAnnotation Term="Core.AppliesToEntitySet" />
  </ValueTerm>

  <ComplexType Name="FilterRestrictionsType">
    <Property Name="Filterable" Type="Edm.Boolean">
      <Documentation>
        <Summary>
          If “true”, $filter is supported.
        </Summary>
      </Documentation>
    </Property>
    <Property Name="RequiredProperties" Type="Collection(Edm.String)" Nullable="true">
      <Documentation>
        <Summary>
          These properties must be specified in the $filter clause.
          (Properties of derived types are not supported).
        </Summary>
      </Documentation>
      <ValueAnnotation Term="Core.IsPropertyPath"/>
    </Property>
    <Property Name="NonFilterableProperties" Type="Collection(Edm.String)" Nullable="true">
      <Documentation>
        <Summary>
          These  properties cannot be used in $filter expressions.
        </Summary>
      </Documentation>
      <ValueAnnotation Term="Core.IsPropertyPath"/>
    </Property>
  </ComplexType>


  <ValueTerm Name="SortRestrictions" Type="Self.SortRestrictionsType">
    <Documentation>
      <Summary>Restrictions on $orderby expressions for this entity set</Summary>
    </Documentation>
    <ValueAnnotation Term="Core.AppliesToEntitySet" />
  </ValueTerm>

  <ComplexType Name="SortRestrictionsType">
    <Property Name="Sortable" Type="Edm.Boolean">
      <Documentation>
        <Summary>
          If “true”, $orderby is supported.
        </Summary>
      </Documentation>
    </Property>
    <Property Name="AscendingOnlyProperties" Type="Collection(Edm.String)" Nullable="true">
      <Documentation>
        <Summary>
          These properties can only be used for sorting in Ascending order.
        </Summary>
      </Documentation>
      <ValueAnnotation Term="Core.IsPropertyPath"/>
    </Property>
    <Property Name="DescendingOnlyProperties" Type="Collection(Edm.String)" Nullable="true">
      <Documentation>
        <Summary>
          These properties can only be used for sorting in Descending order.
        </Summary>
      </Documentation>
    </Property>
    <Property Name="UnsortableProperties" Type="Collection(Edm.String)" Nullable="true">
      <Documentation>
        <Summary>
          These  properties cannot be used in $orderby expressions.
        </Summary>
      </Documentation>
      <ValueAnnotation Term="Core.IsPropertyPath"/>
    </Property>
  </ComplexType>

</Schema>