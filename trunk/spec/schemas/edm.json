{
	"$schema":"http://json-schema.org/draft-04/schema#",
	"description":"OData JSON Format for Common Schema Definition Language (CSDL) Version 4.0",
	"definitions":{
		"Edm.Binary":{
			"type":"string",
			"pattern":"^([A-Za-z0-9_-]{4})*([A-Za-z0-9_-]{3}[A-Za-z0-9_-]|[A-Za-z0-9_-]{2}[AEIMQUYcgkosw048]=?|[A-Za-z0-9_-][AQgw](==)?)?$"
		},
		"Edm.Byte":{
			"type":"integer",
			"minimum":0,
			"maximum":255
		},
		"Edm.Date":{
			"type":"string",
			"pattern":"^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
			"format":"xsd:date"
		},
		"Edm.DateTimeOffset":{
			"type":"string",
			"pattern":"^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
			"format":"date-time"
		},
		"Edm.Double":{
			"anyOf":[
				{
					"type":"number",
					"format":"xsd:double"
				},
				{
					"enum":[
						"-INF",
						"INF",
						"NaN"
					]
				}
			]
		},
		"Edm.Duration":{
			"type":"string",
			"pattern":"^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
			"format":"xsd:dayTimeDuration"
		},
		"Edm.Guid":{
			"type":"string",
			"pattern":"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
		},
		"Edm.Int16":{
			"type":"integer",
			"minimum":-32768,
			"maximum":32767
		},
		"Edm.Int32":{
			"type":"integer",
			"minimum":-2147483648,
			"maximum":2147483647
		},
		"Edm.Int64":{
			"type":"integer",
			"minimum":-9223372036854775808,
			"maximum":9223372036854775807
		},
		"Edm.SByte":{
			"type":"integer",
			"minimum":-128,
			"maximum":127
		},
		"Edm.Single":{
			"anyOf":[
				{
					"type":"number",
					"format":"xsd:float"
				},
				{
					"enum":[
						"-INF",
						"INF",
						"NaN"
					]
				}
			]
		},
		"Edm.Stream":{
			"description":"unfulfillable constraint, no inline representation of Edm.Stream",
			"type":"string",
			"enum":[
				null
			]
		},
		"Edm.TimeOfDay":{
			"type":"string",
			"pattern":"^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$"
		},
		"Edm.Geography":{
			"@TODO":"expand into subtypes and define GeoJSON format"
		},
		"Edm.GeographyPoint":{
			"@TODO":"define GeoJSON format"
		},
		"Edm.GeographyLineString":{
			"@TODO":"define GeoJSON format"
		},
		"Edm.GeographyPolygon":{
			"@TODO":"define GeoJSON format"
		},
		"Edm.GeographyMultiPoint":{
			"@TODO":"define GeoJSON format"
		},
		"Edm.GeographyMultiLineString":{
			"@TODO":"define GeoJSON format"
		},
		"Edm.GeographyMultiPolygon":{
			"@TODO":"define GeoJSON format"
		},
		"Edm.GeographyCollection":{
			"@TODO":"define GeoJSON format"
		},
		"Edm.Geometry":{
			"@TODO":"expand into subtypes and define GeoJSON format"
		},
		"Edm.GeometryPoint":{
			"@TODO":"define GeoJSON format"
		},
		"Edm.GeometryLineString":{
			"@TODO":"define GeoJSON format"
		},
		"Edm.GeometryPolygon":{
			"@TODO":"define GeoJSON format"
		},
		"Edm.GeometryMultiPoint":{
			"@TODO":"define GeoJSON format"
		},
		"Edm.GeometryMultiLineString":{
			"@TODO":"define GeoJSON format"
		},
		"Edm.GeometryMultiPolygon":{
			"@TODO":"define GeoJSON format"
		},
		"Edm.GeometryCollection":{
			"@TODO":"define GeoJSON format"
		},
		"Edm.PrimitiveType":{
			"type":[
				"boolean",
				"number",
				"string"
			]
		},
		"odata.error":{
			"@TODO":"define"
		}
	},
	"allOf":[
		{
			"$ref":"http://json-schema.org/draft-04/schema#"
		}
	],
	"properties":{
		"schemas":{
			"@TODO":"define"
		},
		"references":{
			"@TODO":"define",
			"includeAnnotations@TODO":"uniqueItems:true"
		}
	}
}