<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx xmlns:edmx="http://docs.oasis-open.org/odata/ns/edmx" Version="4.0">
  <edmx:Reference Url="http://tinyurl.com/Org-OData-Core" />
  <edmx:DataServices DataServiceVersion="4.0">
    <Schema xmlns="http://docs.oasis-open.org/odata/ns/edm" Namespace="Org.OData.Capabilities.V1" Alias="Capabilities">
      <Documentation>
        <Summary>
          The Capabilities vocabulary aims to provide a way for service authors to describe
          certain capabilities of an OData Service.
        </Summary>
        <LongDescription>
          There are some capabilities which are strongly recommended for services to support even
          though they are optional. Support for $top and $skip is a good example as
          supporting
          these query options helps with performance of a service and are essential. Such
          capabilities are assumed to be default capabilities of an OData service even in
          the
          case that a capabilities annotation doesn’t exist. Capabilities annotations are
          mainly expected to be used to explicitly specify that a service doesn’t support such
          capabilities. Capabilities annotations can as well be used to declaratively
          specify
          the support of such capabilities.

          On the other hand, there are some capabilities that a service may choose to support or
          not support and in varying degrees. $filter and $orderby are such good examples.
          This vocabulary aims to define terms to specify support or no support for such
          capabilities.

          A service is assumed to support by default the following capabilities even though an
          annotation doesn’t exist:
          - Countability ($count, $inlinecount)
          - Client pageability ($top, $skip)
          - Expandability ($expand)
          - Indexability by key
          - Batch support ($batch)
          - Navigability of navigation properties

          A service is expected to support the following capabilities. If not supported, the
          service
          is expected to call out the restrictions using annotations:
          - Filterability ($filter)
          - Sortability ($orderby)
          - Queryability of top level entity sets
          - Query functions

          A client cannot assume that a service supports certain capabilities. A client can try,
          but
          it needs to be prepared to handle an error in case the following capabilities are not
          supported:
          - Insertability
          - Updatability
          - Deletability
        </LongDescription>
      </Documentation>

      <Using Alias="Core" Namespace="Org.OData.Core.V1" />


      <Term Name="InsertRestrictions" Type="Capabilities.InsertRestrictionsType" AppliesTo="EntitySet">
        <Documentation>
          <Summary>Entities can be added to this set</Summary>
        </Documentation>
      </Term>

      <ComplexType Name="InsertRestrictionsType">
        <Property Name="Insertable" Type="Boolean">
          <Documentation>
            <Summary>
              If “true”, the targeted EntitySet is insertable.
              If “false”, the targeted EntitySet is not insertable.
            </Summary>
          </Documentation>
        </Property>
        <Property Name="NonInsertableProperties" Type="Collection(PropertyPath)"
          Nullable="true"
        >
          <Documentation>
            <Summary>
              These properties SHOULD be omitted from POST requests because the server
              will ignore their values.
            </Summary>
          </Documentation>
        </Property>
        <Property Name="NonInsertableNavigationProperties" Type="Collection(NavigationPropertyPath)"
          Nullable="true"
        >
          <Documentation>
            <Summary>
              These navigation properties do not allow InsertLink requests.
            </Summary>
          </Documentation>
        </Property>
      </ComplexType>


      <Term Name="UpdateRestrictions" Type="Capabilities.UpdateRestrictionsType" AppliesTo="EntitySet">
        <Documentation>
          <Summary>Entities of this set can be changed</Summary>
        </Documentation>
      </Term>

      <ComplexType Name="UpdateRestrictionsType">
        <Property Name="Updatable" Type="Boolean">
          <Documentation>
            <Summary>
              If “true”, the targeted EntitySet is updatable.
              If “false”, the targeted EntitySet is not updatable.
            </Summary>
          </Documentation>
        </Property>
        <Property Name="NonUpdatableProperties" Type="Collection(PropertyPath)"
          Nullable="true"
        >
          <Documentation>
            <Summary>
              These properties SHOULD be omitted from PUT or PATCH requests because the server will
              ignore their values.
              They do not allow UpdateValue and DeleteValue requests.
            </Summary>
          </Documentation>
        </Property>
        <Property Name="NonUpdatableNavigationProperties" Type="Collection(NavigationPropertyPath)"
          Nullable="true"
        >
          <Documentation>
            <Summary>
              These navigation properties do not allow UpdateLink requests.
            </Summary>
          </Documentation>
        </Property>
      </ComplexType>


      <Term Name="DeleteRestrictions" Type="Capabilities.DeleteRestrictionsType" AppliesTo="EntitySet">
        <Documentation>
          <Summary>Entities can be removed from this set</Summary>
        </Documentation>
      </Term>

      <ComplexType Name="DeleteRestrictionsType">
        <Property Name="Deletable" Type="Boolean">
          <Documentation>
            <Summary>
              If “true”, the targeted EntitySet is deletable.
              If “false”, the targeted EntitySet is not deletable.
            </Summary>
          </Documentation>
        </Property>
        <Property Name="NonDeletableNavigationProperties" Type="Collection(NavigationPropertyPath)"
          Nullable="true"
        >
          <Documentation>
            <Summary>
              These navigation properties do not allow DeleteLink requests.
            </Summary>
          </Documentation>
        </Property>
      </ComplexType>


      <Term Name="Countable" Type="Core.Tag" DefaultValue="true" AppliesTo="EntitySet">
        <Documentation>
          <Summary>Entity set supports /$count path suffix and $inlinecount=allpages
            system query option</Summary>
        </Documentation>
      </Term>

      <Term Name="Queryable" Type="Core.Tag" DefaultValue="true" AppliesTo="EntitySet">
        <Documentation>
          <Summary>
            If true, the entity set can be directly queried as a top level set.
            If false, entities in this set can only be accessed via relationships or functions.
          </Summary>
        </Documentation>
      </Term>

      <Term Name="ClientPagable" Type="Core.Tag" DefaultValue="true" AppliesTo="EntitySet">
        <Documentation>
          <Summary>Entity set supports $top and $skip</Summary>
        </Documentation>
      </Term>

      <Term Name="Expandable" Type="Core.Tag" DefaultValue="true" AppliesTo="NavigationProperty">
        <Documentation>
          <Summary>Supports $expand system query option</Summary>
        </Documentation>
      </Term>

      <Term Name="Navigable" Type="Core.Tag" DefaultValue="true" AppliesTo="NavigationProperty">
        <Documentation>
          <Summary>Can be used in resource paths</Summary>
        </Documentation>
      </Term>

      <Term Name="IndexableByKey" Type="Core.Tag" DefaultValue="true" AppliesTo="EntitySet">
        <Documentation>
          <Summary>
            Entities in this set can be addressed by key value(s) according to OData URL conventions
          </Summary>
        </Documentation>
      </Term>

      <Term Name="BatchSupported" Type="Core.Tag" DefaultValue="true" AppliesTo="EntityContainer">
        <Documentation>
          <Summary>Entity container supports $batch requests</Summary>
        </Documentation>
      </Term>

      <Term Name="FilterFunctions" Type="Collection(String)" AppliesTo="EntityContainer EntitySet">
        <Documentation>
          <Summary>List of functions supported in $filter</Summary>
        </Documentation>
      </Term>


      <Term Name="FilterRestrictions" Type="Capabilities.FilterRestrictionsType" AppliesTo="EntitySet">
        <Documentation>
          <Summary>Restrictions on $filter expressions for this entity set</Summary>
        </Documentation>
      </Term>

      <ComplexType Name="FilterRestrictionsType">
        <Property Name="Filterable" Type="Boolean">
          <Documentation>
            <Summary>
              If “true”, $filter is supported.
            </Summary>
          </Documentation>
        </Property>
        <Property Name="RequiredProperties" Type="Collection(PropertyPath)"
          Nullable="true"
        >
          <Documentation>
            <Summary>
              These properties must be specified in the $filter clause.
              (Properties of derived types are not supported).
            </Summary>
          </Documentation>
        </Property>
        <Property Name="NonFilterableProperties" Type="Collection(PropertyPath)"
          Nullable="true"
        >
          <Documentation>
            <Summary>
              These properties cannot be used in $filter expressions.
            </Summary>
          </Documentation>
        </Property>
      </ComplexType>


      <Term Name="SortRestrictions" Type="Capabilities.SortRestrictionsType" AppliesTo="EntitySet">
        <Documentation>
          <Summary>Restrictions on $orderby expressions for this entity set</Summary>
        </Documentation>
      </Term>

      <ComplexType Name="SortRestrictionsType">
        <Property Name="Sortable" Type="Boolean">
          <Documentation>
            <Summary>
              If “true”, $orderby is supported.
            </Summary>
          </Documentation>
        </Property>
        <Property Name="AscendingOnlyProperties" Type="Collection(PropertyPath)"
          Nullable="true"
        >
          <Documentation>
            <Summary>
              These properties can only be used for sorting in Ascending order.
            </Summary>
          </Documentation>
        </Property>
        <Property Name="DescendingOnlyProperties" Type="Collection(PropertyPath)"
          Nullable="true"
        >
          <Documentation>
            <Summary>
              These properties can only be used for sorting in Descending order.
            </Summary>
          </Documentation>
        </Property>
        <Property Name="UnsortableProperties" Type="Collection(PropertyPath)"
          Nullable="true"
        >
          <Documentation>
            <Summary>
              These properties cannot be used in $orderby expressions.
            </Summary>
          </Documentation>
        </Property>
      </ComplexType>

    </Schema>
  </edmx:DataServices>
</edmx:Edmx>