{
	"swagger":"2.0",
	"info":{
		"title":"TripPin service is a sample service for OData V4.",
		"description":"The OData Service at http://services.odata.org/V4/(S(cnbm44wtbc1v5bgrlek5lpcc))/TripPinServiceRW/",
		"version":"0.1.0",
		"x-odata-version":"4.0"
	},
	"host":"services.odata.org",
	"schemes":[
		"http"
	],
	"basePath":"/V4/(S(cnbm44wtbc1v5bgrlek5lpcc))/TripPinServiceRW",
	"consumes":[
		"application/json"
	],
	"produces":[
		"application/json"
	],
	"paths":{
		"/Photos":{
			"get":{
				"summary":"Get entities from entity set Photos",
				"description":"Get entities from entity set Photos",
				"tags":[
					"Photos"
				],
				"parameters":[
					{
						"$ref":"#/parameters/filter"
					},
					{
						"$ref":"#/parameters/expand"
					},
					{
						"$ref":"#/parameters/select"
					},
					{
						"$ref":"#/parameters/orderby"
					},
					{
						"$ref":"#/parameters/top"
					},
					{
						"$ref":"#/parameters/skip"
					},
					{
						"$ref":"#/parameters/count"
					}
				],
				"responses":{
					"200":{
						"description":"EntitySet Photos",
						"schema":{
							"type":"object",
							"properties":{
								"value":{
									"type":"array",
									"items":{
										"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Photo"
									}
								}
							}
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			},
			"post":{
				"summary":"Post a new entity to entity set Photos",
				"description":"Post a new entity to entity set Photos",
				"tags":[
					"Photos"
				],
				"parameters":[
					{
						"name":"Photo",
						"in":"body",
						"description":"The new entity",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Photo"
						}
					}
				],
				"responses":{
					"201":{
						"description":"Created entity",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Photo"
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			}
		},
		"/Photos({Id})":{
			"get":{
				"summary":"Get entity from Photos by key.",
				"description":"Returns the entity with the key from Photos",
				"tags":[
					"Photos"
				],
				"parameters":[
					{
						"name":"Id",
						"in":"path",
						"required":true,
						"description":"key: Id",
						"type":"integer",
						"format":"int64"
					},
					{
						"$ref":"#/parameters/expand"
					},
					{
						"$ref":"#/parameters/select"
					}
				],
				"responses":{
					"200":{
						"description":"EntitySet Photos",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Photo"
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			},
			"patch":{
				"summary":"Update entity in EntitySet Photos",
				"description":"Update entity in EntitySet Photos",
				"tags":[
					"Photos"
				],
				"parameters":[
					{
						"name":"Id",
						"in":"path",
						"required":true,
						"description":"key: Id",
						"type":"integer",
						"format":"int64"
					},
					{
						"name":"Photo",
						"in":"body",
						"description":"The entity to patch",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Photo"
						}
					}
				],
				"responses":{
					"204":{
						"description":"Empty response"
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			},
			"delete":{
				"summary":"Delete entity in EntitySet Photos",
				"description":"Delete entity in EntitySet Photos",
				"tags":[
					"Photos"
				],
				"parameters":[
					{
						"name":"Id",
						"in":"path",
						"required":true,
						"description":"key: Id",
						"type":"integer",
						"format":"int64"
					},
					{
						"name":"If-Match",
						"in":"header",
						"description":"If-Match header",
						"type":"string"
					}
				],
				"responses":{
					"204":{
						"description":"Empty response"
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			}
		},
		"/People":{
			"get":{
				"summary":"Get entities from entity set People",
				"description":"Get entities from entity set People",
				"tags":[
					"People"
				],
				"parameters":[
					{
						"$ref":"#/parameters/filter"
					},
					{
						"$ref":"#/parameters/expand"
					},
					{
						"$ref":"#/parameters/select"
					},
					{
						"$ref":"#/parameters/orderby"
					},
					{
						"$ref":"#/parameters/top"
					},
					{
						"$ref":"#/parameters/skip"
					},
					{
						"$ref":"#/parameters/count"
					}
				],
				"responses":{
					"200":{
						"description":"EntitySet People",
						"schema":{
							"type":"object",
							"properties":{
								"value":{
									"type":"array",
									"items":{
										"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Person"
									}
								}
							}
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			},
			"post":{
				"summary":"Post a new entity to entity set People",
				"description":"Post a new entity to entity set People",
				"tags":[
					"People"
				],
				"parameters":[
					{
						"name":"Person",
						"in":"body",
						"description":"The new entity",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Person"
						}
					}
				],
				"responses":{
					"201":{
						"description":"Created entity",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Person"
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			}
		},
		"/People('{UserName}')":{
			"get":{
				"summary":"Get entity from People by key.",
				"description":"Returns the entity with the key from People",
				"tags":[
					"People"
				],
				"parameters":[
					{
						"name":"UserName",
						"in":"path",
						"required":true,
						"description":"key: UserName",
						"type":"string"
					},
					{
						"$ref":"#/parameters/expand"
					},
					{
						"$ref":"#/parameters/select"
					}
				],
				"responses":{
					"200":{
						"description":"EntitySet People",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Person"
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			},
			"patch":{
				"summary":"Update entity in EntitySet People",
				"description":"Update entity in EntitySet People",
				"tags":[
					"People"
				],
				"parameters":[
					{
						"name":"UserName",
						"in":"path",
						"required":true,
						"description":"key: UserName",
						"type":"string"
					},
					{
						"name":"Person",
						"in":"body",
						"description":"The entity to patch",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Person"
						}
					}
				],
				"responses":{
					"204":{
						"description":"Empty response"
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			},
			"delete":{
				"summary":"Delete entity in EntitySet People",
				"description":"Delete entity in EntitySet People",
				"tags":[
					"People"
				],
				"parameters":[
					{
						"name":"UserName",
						"in":"path",
						"required":true,
						"description":"key: UserName",
						"type":"string"
					},
					{
						"name":"If-Match",
						"in":"header",
						"description":"If-Match header",
						"type":"string"
					}
				],
				"responses":{
					"204":{
						"description":"Empty response"
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			}
		},
		"/People('{UserName}')/Microsoft.OData.SampleService.Models.TripPin.GetFavoriteAirline()":{
			"get":{
				"summary":"Invoke function GetFavoriteAirline",
				"tags":[
					"People"
				],
				"parameters":[
					{
						"name":"UserName",
						"in":"path",
						"required":true,
						"description":"key: UserName",
						"type":"string"
					}
				],
				"responses":{
					"200":{
						"description":"Success",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airline"
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			}
		},
		"/People('{UserName}')/Microsoft.OData.SampleService.Models.TripPin.GetFriendsTrips(userName='{userName}')":{
			"get":{
				"summary":"Invoke function GetFriendsTrips",
				"tags":[
					"People"
				],
				"parameters":[
					{
						"name":"UserName",
						"in":"path",
						"required":true,
						"description":"key: UserName",
						"type":"string"
					},
					{
						"name":"userName",
						"in":"path",
						"type":"string"
					}
				],
				"responses":{
					"200":{
						"description":"Success",
						"schema":{
							"type":"array",
							"items":{
								"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Trip"
							}
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			}
		},
		"/People('{UserName}')/Microsoft.OData.SampleService.Models.TripPin.ShareTrip":{
			"post":{
				"summary":"Invoke action ShareTrip",
				"tags":[
					"People"
				],
				"parameters":[
					{
						"name":"UserName",
						"in":"path",
						"required":true,
						"description":"key: UserName",
						"type":"string"
					},
					{
						"name":"body",
						"in":"body",
						"description":"Request body",
						"schema":{
							"type":"object",
							"properties":{
								"userName":{
									"type":"string"
								},
								"tripId":{
									"type":"integer",
									"format":"int32"
								}
							}
						}
					}
				],
				"responses":{
					"204":{
						"description":"Empty response"
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			}
		},
		"/Airlines":{
			"get":{
				"summary":"Get entities from entity set Airlines",
				"description":"Get entities from entity set Airlines",
				"tags":[
					"Airlines"
				],
				"parameters":[
					{
						"$ref":"#/parameters/filter"
					},
					{
						"$ref":"#/parameters/expand"
					},
					{
						"$ref":"#/parameters/select"
					},
					{
						"$ref":"#/parameters/orderby"
					},
					{
						"$ref":"#/parameters/top"
					},
					{
						"$ref":"#/parameters/skip"
					},
					{
						"$ref":"#/parameters/count"
					}
				],
				"responses":{
					"200":{
						"description":"EntitySet Airlines",
						"schema":{
							"type":"object",
							"properties":{
								"value":{
									"type":"array",
									"items":{
										"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airline"
									}
								}
							}
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			},
			"post":{
				"summary":"Post a new entity to entity set Airlines",
				"description":"Post a new entity to entity set Airlines",
				"tags":[
					"Airlines"
				],
				"parameters":[
					{
						"name":"Airline",
						"in":"body",
						"description":"The new entity",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airline"
						}
					}
				],
				"responses":{
					"201":{
						"description":"Created entity",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airline"
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			}
		},
		"/Airlines('{AirlineCode}')":{
			"get":{
				"summary":"Get entity from Airlines by key.",
				"description":"Returns the entity with the key from Airlines",
				"tags":[
					"Airlines"
				],
				"parameters":[
					{
						"name":"AirlineCode",
						"in":"path",
						"required":true,
						"description":"key: AirlineCode",
						"type":"string"
					},
					{
						"$ref":"#/parameters/expand"
					},
					{
						"$ref":"#/parameters/select"
					}
				],
				"responses":{
					"200":{
						"description":"EntitySet Airlines",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airline"
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			},
			"patch":{
				"summary":"Update entity in EntitySet Airlines",
				"description":"Update entity in EntitySet Airlines",
				"tags":[
					"Airlines"
				],
				"parameters":[
					{
						"name":"AirlineCode",
						"in":"path",
						"required":true,
						"description":"key: AirlineCode",
						"type":"string"
					},
					{
						"name":"Airline",
						"in":"body",
						"description":"The entity to patch",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airline"
						}
					}
				],
				"responses":{
					"204":{
						"description":"Empty response"
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			},
			"delete":{
				"summary":"Delete entity in EntitySet Airlines",
				"description":"Delete entity in EntitySet Airlines",
				"tags":[
					"Airlines"
				],
				"parameters":[
					{
						"name":"AirlineCode",
						"in":"path",
						"required":true,
						"description":"key: AirlineCode",
						"type":"string"
					},
					{
						"name":"If-Match",
						"in":"header",
						"description":"If-Match header",
						"type":"string"
					}
				],
				"responses":{
					"204":{
						"description":"Empty response"
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			}
		},
		"/Airports":{
			"get":{
				"summary":"Get entities from entity set Airports",
				"description":"Get entities from entity set Airports",
				"tags":[
					"Airports"
				],
				"parameters":[
					{
						"$ref":"#/parameters/filter"
					},
					{
						"$ref":"#/parameters/expand"
					},
					{
						"$ref":"#/parameters/select"
					},
					{
						"$ref":"#/parameters/orderby"
					},
					{
						"$ref":"#/parameters/top"
					},
					{
						"$ref":"#/parameters/skip"
					},
					{
						"$ref":"#/parameters/count"
					}
				],
				"responses":{
					"200":{
						"description":"EntitySet Airports",
						"schema":{
							"type":"object",
							"properties":{
								"value":{
									"type":"array",
									"items":{
										"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airport"
									}
								}
							}
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			},
			"post":{
				"summary":"Post a new entity to entity set Airports",
				"description":"Post a new entity to entity set Airports",
				"tags":[
					"Airports"
				],
				"parameters":[
					{
						"name":"Airport",
						"in":"body",
						"description":"The new entity",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airport"
						}
					}
				],
				"responses":{
					"201":{
						"description":"Created entity",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airport"
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			}
		},
		"/Airports('{IcaoCode}')":{
			"get":{
				"summary":"Get entity from Airports by key.",
				"description":"Returns the entity with the key from Airports",
				"tags":[
					"Airports"
				],
				"parameters":[
					{
						"name":"IcaoCode",
						"in":"path",
						"required":true,
						"description":"key: IcaoCode",
						"type":"string"
					},
					{
						"$ref":"#/parameters/expand"
					},
					{
						"$ref":"#/parameters/select"
					}
				],
				"responses":{
					"200":{
						"description":"EntitySet Airports",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airport"
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			},
			"patch":{
				"summary":"Update entity in EntitySet Airports",
				"description":"Update entity in EntitySet Airports",
				"tags":[
					"Airports"
				],
				"parameters":[
					{
						"name":"IcaoCode",
						"in":"path",
						"required":true,
						"description":"key: IcaoCode",
						"type":"string"
					},
					{
						"name":"Airport",
						"in":"body",
						"description":"The entity to patch",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airport"
						}
					}
				],
				"responses":{
					"204":{
						"description":"Empty response"
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			},
			"delete":{
				"summary":"Delete entity in EntitySet Airports",
				"description":"Delete entity in EntitySet Airports",
				"tags":[
					"Airports"
				],
				"parameters":[
					{
						"name":"IcaoCode",
						"in":"path",
						"required":true,
						"description":"key: IcaoCode",
						"type":"string"
					},
					{
						"name":"If-Match",
						"in":"header",
						"description":"If-Match header",
						"type":"string"
					}
				],
				"responses":{
					"204":{
						"description":"Empty response"
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			}
		},
		"/GetNearestAirport(lat={lat},lon={lon})":{
			"get":{
				"summary":"Invoke function import GetNearestAirport",
				"tags":[
					"Airports"
				],
				"parameters":[
					{
						"name":"lat",
						"in":"path",
						"type":"number",
						"format":"double"
					},
					{
						"name":"lon",
						"in":"path",
						"type":"number",
						"format":"double"
					}
				],
				"responses":{
					"200":{
						"description":"Success",
						"schema":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airport"
						}
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			}
		},
		"/ResetDataSource":{
			"post":{
				"summary":"Invoke action import ResetDataSource",
				"tags":[
					"Service Operations"
				],
				"parameters":[
					{
						"name":"body",
						"in":"body",
						"description":"Request body",
						"schema":{
							"type":"object"
						}
					}
				],
				"responses":{
					"204":{
						"description":"Empty response"
					},
					"default":{
						"description":"Unexpected error",
						"schema":{
							"$ref":"#/definitions/_Error"
						}
					}
				}
			}
		}
	},
	"definitions":{
		"Microsoft.OData.SampleService.Models.TripPin.PersonGender":{
			"enum":[
				"Male",
				"Female",
				"Unknown"
			],
			"Male@odata.value":0,
			"Female@odata.value":1,
			"Unknown@odata.value":2
		},
		"Microsoft.OData.SampleService.Models.TripPin.City":{
			"type":"object",
			"properties":{
				"CountryRegion":{
					"type":"string"
				},
				"Name":{
					"type":"string"
				},
				"Region":{
					"type":"string"
				}
			}
		},
		"Microsoft.OData.SampleService.Models.TripPin.Location":{
			"type":"object",
			"properties":{
				"Address":{
					"type":"string"
				},
				"City":{
					"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.City"
				}
			}
		},
		"Microsoft.OData.SampleService.Models.TripPin.EventLocation":{
			"allOf":[
				{
					"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Location"
				},
				{
					"type":"object",
					"properties":{
						"BuildingInfo":{
							"type":"string"
						}
					}
				}
			]
		},
		"Microsoft.OData.SampleService.Models.TripPin.AirportLocation":{
			"allOf":[
				{
					"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Location"
				},
				{
					"type":"object",
					"properties":{
						"Loc":{
							"type":"string",
							"srid":"4326"
						}
					}
				}
			]
		},
		"Microsoft.OData.SampleService.Models.TripPin.Photo":{
			"type":"object",
			"properties":{
				"Id":{
					"type":"integer",
					"format":"int64",
					"x-Org.OData.Core.V1.Permissions":"Read"
				},
				"Name":{
					"type":"string"
				}
			},
			"x-Org.OData.Core.V1.AcceptableMediaTypes":[
				"image\/jpeg"
			]
		},
		"Microsoft.OData.SampleService.Models.TripPin.Person":{
			"type":"object",
			"properties":{
				"UserName":{
					"type":"string",
					"x-Org.OData.Core.V1.Permissions":"Read"
				},
				"FirstName":{
					"type":"string"
				},
				"LastName":{
					"type":"string"
				},
				"Emails":{
					"type":"array",
					"items":{
						"type":"string"
					}
				},
				"AddressInfo":{
					"type":"array",
					"items":{
						"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Location"
					}
				},
				"Gender":{
					"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.PersonGender"
				},
				"Concurrency":{
					"type":"integer",
					"format":"int64",
					"x-Org.OData.Core.V1.Computed":true
				},
				"Friends":{
					"type":"array",
					"items":{
						"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Person"
					},
					"x-relationship":{
						
					}
				},
				"Trips":{
					"type":"array",
					"items":{
						"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Trip"
					},
					"x-relationship":{
						"containsTarget":true
					}
				},
				"Photo":{
					"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Photo",
					"x-relationship":{
						
					}
				}
			}
		},
		"Microsoft.OData.SampleService.Models.TripPin.Airline":{
			"type":"object",
			"properties":{
				"AirlineCode":{
					"type":"string",
					"x-Org.OData.Core.V1.Permissions":"Read"
				},
				"Name":{
					"type":"string"
				}
			}
		},
		"Microsoft.OData.SampleService.Models.TripPin.Airport":{
			"type":"object",
			"properties":{
				"IcaoCode":{
					"type":"string",
					"x-Org.OData.Core.V1.Permissions":"Read"
				},
				"Name":{
					"type":"string"
				},
				"IataCode":{
					"type":"string",
					"x-Org.OData.Core.V1.Immutable":true
				},
				"Location":{
					"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.AirportLocation"
				}
			}
		},
		"Microsoft.OData.SampleService.Models.TripPin.PlanItem":{
			"type":"object",
			"properties":{
				"PlanItemId":{
					"type":"integer",
					"format":"int32",
					"x-Org.OData.Core.V1.Permissions":"Read"
				},
				"ConfirmationCode":{
					"type":"string"
				},
				"StartsAt":{
					"type":"string",
					"format":"date-time"
				},
				"EndsAt":{
					"type":"string",
					"format":"date-time"
				},
				"Duration":{
					"type":"string"
				}
			}
		},
		"Microsoft.OData.SampleService.Models.TripPin.PublicTransportation":{
			"allOf":[
				{
					"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.PlanItem"
				},
				{
					"type":"object",
					"properties":{
						"SeatNumber":{
							"type":"string"
						}
					}
				}
			]
		},
		"Microsoft.OData.SampleService.Models.TripPin.Flight":{
			"allOf":[
				{
					"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.PublicTransportation"
				},
				{
					"type":"object",
					"properties":{
						"FlightNumber":{
							"type":"string"
						},
						"From":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airport",
							"x-relationship":{
								
							}
						},
						"To":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airport",
							"x-relationship":{
								
							}
						},
						"Airline":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Airline",
							"x-relationship":{
								
							}
						}
					}
				}
			]
		},
		"Microsoft.OData.SampleService.Models.TripPin.Event":{
			"allOf":[
				{
					"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.PlanItem"
				},
				{
					"type":"object",
					"properties":{
						"Description":{
							"type":"string"
						},
						"OccursAt":{
							"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.EventLocation"
						}
					}
				}
			]
		},
		"Microsoft.OData.SampleService.Models.TripPin.Trip":{
			"type":"object",
			"properties":{
				"TripId":{
					"type":"integer",
					"format":"int32",
					"x-Org.OData.Core.V1.Permissions":"Read"
				},
				"ShareId":{
					"type":"string"
				},
				"Description":{
					"type":"string"
				},
				"Name":{
					"type":"string"
				},
				"Budget":{
					"type":"number",
					"format":"float",
					"x-Org.OData.Measures.V1.ISOCurrency":"USD",
					"x-Org.OData.Measures.V1.Scale":2
				},
				"StartsAt":{
					"type":"string",
					"format":"date-time"
				},
				"EndsAt":{
					"type":"string",
					"format":"date-time"
				},
				"Tags":{
					"type":"array",
					"items":{
						"type":"string"
					}
				},
				"Photos":{
					"type":"array",
					"items":{
						"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.Photo"
					},
					"x-relationship":{
						
					}
				},
				"PlanItems":{
					"type":"array",
					"items":{
						"$ref":"#/definitions/Microsoft.OData.SampleService.Models.TripPin.PlanItem"
					},
					"x-relationship":{
						"containsTarget":true
					}
				}
			}
		},
		"_Error":{
			"properties":{
				"error":{
					"$ref":"#/definitions/_InError"
				}
			}
		},
		"_InError":{
			"properties":{
				"code":{
					"type":"string"
				},
				"message":{
					"type":"string"
				}
			}
		}
	},
	"parameters":{
		"expand":{
			"name":"$expand",
			"in":"query",
			"description":"expand navigation property",
			"type":"string"
		},
		"select":{
			"name":"$select",
			"in":"query",
			"description":"select structural property",
			"type":"string"
		},
		"orderby":{
			"name":"$orderby",
			"in":"query",
			"description":"order by some property",
			"type":"string"
		},
		"top":{
			"name":"$top",
			"in":"query",
			"description":"top elements",
			"type":"integer"
		},
		"skip":{
			"name":"$skip",
			"in":"query",
			"description":"skip elements",
			"type":"integer"
		},
		"count":{
			"name":"$count",
			"in":"query",
			"description":"include count in response",
			"type":"boolean"
		},
		"filter":{
			"name":"$filter",
			"in":"query",
			"description":"filter elements by property values",
			"type":"string"
		}
	}
}