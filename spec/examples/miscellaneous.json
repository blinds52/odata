{
  "@odata.context":"#",
  "$schema":"http://odata.org/schemas/edm-v4.0#",
  "references":{
    "http://tinyurl.com/Org-OData-Measures-V1":{
      "includes":{
        "Org.OData.Measures.V1":{
          "alias":"Core"
        },
        "anotherOne":{
          
        }
      },
      "@Some.Term":{
        
      }
    },
    "http://somewhere/Vocabulary/V1":{
      "includeAnnotations":[
        {
          "termNamespace":"Name.Space",
          "targetNamespace":"Target.Space"
        },
        {
          "termNamespace":"Name.Space",
          "targetNamespace":"Target.Space",
          "qualifier":"SomeName"
        },
        {
          "termNamespace":"NameSpace",
          "qualifier":"SomeName"
        },
        {
          "termNamespace":"Name.Space"
        }
      ]
    }
  },
  "definitions":{
    "Self.Weird":{
      "$ref":"#/definitions/Model1.Weird"
    },
    "Model1.Weird":{
      "typekind":"EntityType",
      "keys":{
        "TheKey":"The/Key"
      },
      "properties":{
        "TheKey":{
          "odataType":"Edm.PropertyPath"
        },
        "TheValue":{
          "type":"string"
        },
        "TheString":{
          "type":"string",
          "maxLength":20
        },
        "Tags":{
          "odataType":"Collection(Edm.String)",
          "SRID":"variable"
        },
        "Price":{
          "type":"number",
          "scale":"variable"
        }
      },
      "@Some.Term#SomeQualifier":{
        "@Some.Term":{
          "string":"Some Value"
        },
        "collection":[
          {
            "string":"SomeString"
          },
          {
            "date":"1212-11-30"
          },
          {
            "dateTimeOffset":"2000-01-01T16:00:00.000-09:00"
          },
          {
            "dateTimeOffset":"2000-01-01T16:00:00Z"
          },
          {
            "timeOfDay":"23:59:59.123456789012"
          },
          {
            "path":"MyAddress/vCard.Address#work/Street"
          },
          {
            "enumMember":"org.example.Pattern/Red"
          },
          {
            "enumMember":"org.example.Pattern/Red org.example.Pattern/Striped"
          },
          {
            "record":{
              "Egon":{
                "string":"1"
              },
              "Hugo":{
                "string":"2",
                "@Some.Term":{
                  "string":"Some Value"
                }
              },
              "@Some.Term":{
                "string":"Some Value"
              }
            }
          },
          {
            "labeledElement":{
              "name":"Attribute",
              "string":"Hello"
            }
          },
          {
            "labeledElement":{
              "name":"Element",
              "string":"Hello"
            }
          },
          {
            "labeledElement":{
              "name":"Record",
              "record":{
                
              }
            }
          },
          {
            "labeledElementReference":"Model.Attribute"
          }
        ]
      },
      "@Vocab.GIQSupplier":{
        "urlRef":{
          "string":"http:\/\/www.odata.org"
        }
      },
      "@Vocab.GIQSupplier":{
        "urlRef":{
          "apply":{
            "function":"odata.fillUriTemplate",
            "values":[
              {
                "string":"http:\/\/host\/service\/Suppliers({suppID})"
              },
              {
                "labeledElement":{
                  "name":"suppID",
                  "apply":{
                    "function":"odata.UriEncode",
                    "values":[
                      {
                        "path":"@SupplierId"
                      },
                      {
                        "dateTimeOffset":"2013-04-08T23:00:00.0Z"
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      "@org.example.display.DisplayName":{
        "cast":{
          "SRID":"variable",
          "scale":"variable",
          "type":"Edm.String",
          "string":"Product Catalog"
        }
      },
      "@Self.IsPreferredCustomer":{
        "isOf":{
          "SRID":"variable",
          "type":"Self.PreferredCustomer",
          "path":"Customer/$count"
        }
      },
      "@Some.Binary":{
        "binary":"Zg"
      },
      "@Some.Binary":{
        "binary":"Zg=="
      },
      "@Some.Binary":{
        "binary":"Zm8"
      },
      "@Some.Binary":{
        "binary":"Zm8="
      },
      "@Some.Binary":{
        "binary":"HugoHase-_ab"
      }
    },
    "Self.Address":{
      "$ref":"#/definitions/Model1.Address"
    },
    "Model1.Address":{
      "typekind":"ComplexType",
      "openType":true,
      "properties":{
        "Street":{
          "type":"string"
        },
        "Street":{
          "type":"string"
        }
      },
      "navigationProperties":{
        "City":{
          "type":"MyModel.City"
        },
        "Region":{
          "type":"MyModel.Region"
        },
        "Country":{
          "type":"MyModel.Country"
        }
      }
    },
    "Self.NavigationOnly":{
      "$ref":"#/definitions/Model1.NavigationOnly"
    },
    "Model1.NavigationOnly":{
      "typekind":"ComplexType",
      "navigationProperties":{
        "Planet":{
          "type":"Some.Planet"
        }
      }
    },
    "Self.AnnotationOnly":{
      "$ref":"#/definitions/Model1.AnnotationOnly"
    },
    "Model1.AnnotationOnly":{
      "typekind":"ComplexType",
      "@Some.Tag":{
        
      }
    },
    "Self.Order":{
      "$ref":"#/definitions/Model1.Order"
    },
    "Model1.Order":{
      "typekind":"EntityType",
      "abstract":true,
      "properties":{
        "Quantity":{
          "type":"number",
          "@Measures.Unit":{
            "path":"ShippingUnit"
          }
        },
        "ShippingUnit":{
          "type":"string",
          "@Core.Description":{
            "string":"Contains the unit for property Quantity"
          }
        }
      }
    },
    "Self.Waldo":{
      "$ref":"#/definitions/Schema.One.Waldo"
    },
    "Schema.One.Waldo":{
      "typekind":"EntityType",
      "keys":{
        "ID":"ID"
      },
      "properties":{
        "ID":{
          "type":"string"
        }
      }
    },
    "Self.Waldo":{
      "$ref":"#/definitions/Schema.Two.Waldo"
    },
    "Schema.Two.Waldo":{
      "typekind":"EntityType",
      "abstract":true,
      "properties":{
        "Fred":{
          "type":"string"
        }
      }
    },
    "Self.Fred":{
      "$ref":"#/definitions/Schema.Two.Fred"
    },
    "Schema.Two.Fred":{
      "typekind":"EntityType",
      "keys":{
        "ID":"ID"
      },
      "properties":{
        "ID":{
          "type":"string"
        }
      },
      "navigationProperties":{
        "Waldos":{
          "type":"Collection(Self.Waldos)"
        }
      }
    },
    "Y.DeveloperType":{
      "typekind":"ComplexType",
      "baseType":"X.PersonType"
    },
    "Y.ScrumTeamType":{
      "typekind":"ComplexType",
      "properties":{
        "ScrumMaster":{
          "odataType":"Y.DeveloperType",
          "@custom.IsA":{
            "string":"Y.Developer X.Person"
          }
        }
      }
    },
    "Y.ArchivedMovieType":{
      "typekind":"ComplexType",
      "baseType":"X.MovieType",
      "properties":{
        "ArchivedAt":{
          "odataType":"Edm.Date"
        }
      },
      "@custom.IsA":{
        "string":"X.Movie"
      }
    },
    "Y.SomeThingType":{
      "typekind":"ComplexType",
      "properties":{
        "SomeProperty":{
          "type":"string"
        },
        "Contacts":{
          "odataType":"Collection(X.PersonType)",
          "@custom.ItemIsA":{
            "string":"X.Person"
          }
        }
      },
      "navigationProperties":{
        "VIPs":{
          "type":"Collection(X.Friend)",
          "@custom.ItemIsA":{
            "string":"X.Friend"
          }
        }
      }
    }
  },
  "schemas":{
    "Model1":{
      "alias":"Self",
      "@UI.ReferenceFacet":{
        "annotationPath":"@UI.LineItem"
      },
      "@UI.ReferenceFacet#OnNavPropTarget":{
        "annotationPath":"Product/Supplier/@UI.LineItem"
      },
      "@UI.ReferenceFacet#OnNavProp":{
        "annotationPath":"Product/Supplier@UI.LineItem"
      },
      "@UI.ReferenceFacet#OnNavPropQualified":{
        "annotationPath":"Product/Supplier@UI.LineItem#Tablet"
      },
      "@UI.ReferenceFacet#ViaUrl":{
        "urlRef":"http://LineItem"
      },
      "@UI.ReferenceFacet#complicated":{
        "annotationPath":"@x.Supplier#X/Contacts@y.ViewVariants"
      },
      "@UI.HyperLink":{
        "navigationPropertyPath":"Supplier"
      },
      "@Is.Null":{
        "@Next.to.Null":{
          
        },
        "null":{
          "@Within.Null":{
            
          }
        }
      },
      "@Vocabulary1.SubTitle":{
        "@For.Constant":{
          
        },
        "int":1234
      },
      "@A.Bool":{
        "bool":true,
        "@Annotate.A.Bool":{
          
        }
      },
      "@A.Decimal":{
        "decimal":12.34
      },
      "@A.Float":{
        "float":1.23e4
      },
      "@A.Float":{
        "float":"INF"
      },
      "@A.Float":{
        "float":"-INF"
      },
      "@A.Float":{
        "float":"NaN"
      },
      "@A.Float#Element":{
        "float":1.23e4
      },
      "@An.Int":{
        "int":1234
      },
      "@A.String":{
        "string":"1.23e4"
      },
      "@A.String":{
        "string":"Fast&Furious"
      },
      "@A.String#ToBeEscaped":{
        "string":"A\/\"good\"\r\nstory\\for\tkids"
      },
      "@A.Date":{
        "date":"2013-10-09"
      },
      "@Capabilities.UpdateRestrictions":{
        "record":{
          "@odata.type":"Derived.Type",
          "NonUpdatableNavigationProperties":{
            "collection":[
              {
                "navigationPropertyPath":"Supplier"
              },
              {
                "navigationPropertyPath":"Category"
              }
            ]
          }
        }
      },
      "@SearchVocabulary.SearchResult":{
        "record":{
          "Title":{
            "path":"Name"
          },
          "Abstract":{
            "path":"Description"
          },
          "Url":{
            "apply":{
              "function":"odata.concat",
              "values":[
                {
                  "string":"Products("
                },
                {
                  "path":"ID"
                },
                {
                  "string":")"
                }
              ],
              "@In.Apply":{
                
              }
            }
          }
        }
      },
      "@org.example.display.DisplayName":{
        "if":[
          {
            "path":"IsFemale"
          },
          {
            "string":"Female"
          },
          {
            "string":"Male"
          }
        ],
        "if@In.If":{
          
        }
      },
      "@UI.CollectionFacet#Contacts":{
        "collection":[
          {
            "annotationPath":"Supplier/@Communication.Contact"
          },
          {
            "annotationPath":"Customer/@Communication.Contact"
          }
        ]
      },
      "@Some.Thing":{
        "and":[
          {
            "or":[
              {
                "eq":[
                  {
                    "ge":[
                      {
                        "null":{
                          
                        }
                      },
                      {
                        "null":{
                          
                        }
                      }
                    ],
                    "ge@In.Ge":{
                      
                    }
                  },
                  {
                    "gt":[
                      {
                        "null":{
                          
                        }
                      },
                      {
                        "null":{
                          
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "ne":[
                  {
                    "lt":[
                      {
                        "null":{
                          
                        }
                      },
                      {
                        "null":{
                          
                        }
                      }
                    ]
                  },
                  {
                    "null":{
                      
                    }
                  }
                ]
              }
            ]
          },
          {
            "not":{
              "le":[
                {
                  "float":"INF"
                },
                {
                  "null":{
                    
                  }
                }
              ]
            }
          }
        ]
      },
      "@Onelegged.If":{
        "if":[
          {
            "bool":true
          },
          {
            "path":"Then"
          }
        ]
      },
      "@Twolegged.If":{
        "if":[
          {
            "bool":false
          },
          {
            "path":"Then"
          },
          {
            "path":"Else"
          }
        ]
      },
      "enumTypes":{
        "Pattern":{
          "members":{
            "Yellow":{
              "@Does.Work":{
                
              },
              "@For.Testing":{
                "isOf":{
                  "type":"Edm.Binary",
                  "path":"Hugo"
                }
              }
            }
          }
        }
      },
      "typeDefinitions":{
        "Fixedstring":{
          "underlyingType":"Edm.String"
        }
      },
      "functions":[
        {
          "name":"CreatedEntities",
          "parameters":{
            "before":{
              "type":"Edm.DateTimeOffset",
              "nullable":true
            },
            "after":{
              "type":"Edm.DateTimeOffset",
              "nullable":true
            }
          },
          "returnType":{
            "type":"Collection(Edm.EntityType)",
            "nullable":true
          }
        },
        {
          "name":"TopSellingProducts",
          "parameters":{
            "Year":{
              "type":"Edm.Decimal",
              "precision":"4",
              "scale":"0",
              "nullable":true
            }
          },
          "returnType":{
            "type":"Collection(Model.Product)",
            "@A.B":{
              "string":"Works"
            }
          }
        }
      ],
      "entityContainer":{
        "name":"Sales",
        "entitySets":{
          "StandardCustomers":{
            "entityType":"Self.Customer",
            "navigationPropertyBindings":{
              "Orders":{
                "target":"Orders"
              }
            }
          },
          "PreferredCustomer":{
            "entityType":"Self.Customer",
            "navigationPropertyBindings":{
              "Orders":{
                "target":"Orders"
              }
            }
          },
          "Orders":{
            "entityType":"Self.Order"
          }
        }
      }
    },
    "Schema.One":{
      "alias":"Self",
      "actions":[
        {
          "name":"Rejection",
          "isBound":true,
          "parameters":{
            "Reason":{
              "type":"Edm.String",
              "maxLength":"max",
              "nullable":true
            }
          }
        }
      ],
      "functions":[
        {
          "name":"OddWaldos",
          "isBound":true,
          "entitySetPath":"in",
          "parameters":{
            "in":{
              "type":"Collection(Self.Waldo)"
            }
          },
          "returnType":{
            "type":"Collection(Self.Waldo)"
          }
        }
      ],
      "entityContainer":{
        "name":"Default",
        "entitySets":{
          "Waldos":{
            "entityType":"Self.Waldo"
          }
        },
        "functionImports":{
          "Bar":{
            "function":"Self.Foo"
          }
        }
      }
    },
    "Schema.One":{
      "alias":"Self",
      "functions":[
        {
          "name":"Foo",
          "returnType":{
            "type":"Edm.String"
          }
        }
      ]
    },
    "Schema.Two":{
      "alias":"Self",
      "entityContainer":{
        "name":"Default",
        "entitySets":{
          "Waldos":{
            "entityType":"Self.Waldo"
          },
          "Freds":{
            "entityType":"Self.Fred",
            "navigationPropertyBindings":{
              "Waldos":{
                "target":"Waldos"
              },
              "MoreWaldos":{
                "target":"Namespace.Container/Freds"
              },
              "EvenMoreWaldos":{
                "target":"Namespace.Container/Orders/Items/M.E/Nav"
              }
            }
          }
        },
        "functionImports":{
          "Bar":{
            "function":"Other.Foo",
            "includeInServiceDocument":true,
            "entitySet":"Namespace.Container/Freds"
          },
          "CreatedEntities":{
            "function":"Model.CreatedEntities",
            "entitySet":"Waldos"
          },
          "Bar":{
            "function":"Other.Foo"
          }
        }
      }
    },
    "X":{
      "alias":null,
      "terms":{
        "Person":{
          "type":"X.PersonType"
        },
        "Team":{
          "type":"Collection(X.PersonType)",
          "@custom.ItemIsA":{
            "string":"X.Person"
          }
        },
        "Movie":{
          "type":"X.MovieType"
        },
        "Friend":{
          "type":"X.FriendType"
        }
      }
    },
    "Y":{
      "alias":null,
      "terms":{
        "Developer":{
          "baseTerm":"X.Person",
          "type":"Y.DeveloperType"
        },
        "DevelopmentTeam":{
          "type":"Collection(Y.DeveloperType)",
          "@custom.ItemIsA":{
            "string":"Y.Developer"
          },
          "@custom.IsA":{
            "string":"X.Team"
          }
        },
        "ScrumTeam":{
          "baseTerm":"Y.DevelopmentTeam",
          "type":"Y.ScrumTeamType"
        },
        "Movies":{
          "type":"Collection(X.Movie)"
        },
        "ArchivedMovies":{
          "type":"Collection(Y.ArchivedMovieType)",
          "@custom.ItemIsA":{
            "string":"X.Movie"
          }
        },
        "SomeThing":{
          "type":"Y.SomeThingType"
        }
      },
      "annotations":[
        {
          "target":"Some.EntityType",
          "@X.Person":{
            "record":{
              
            }
          },
          "@Y.Developer":{
            "record":{
              
            }
          }
        },
        {
          "target":"Some.EntityType",
          "@Y.DevelopmentTeam":{
            "@custom.IsA":{
              "string":"X.Team"
            },
            "path":"SomeNavProp/@Y.Developer"
          }
        },
        {
          "target":"Some.EntityType",
          "@Y.DevelopmentTeam":{
            "@custom.IsA":{
              "string":"X.Team"
            },
            "path":"SomeNavProp/@Y.Developer"
          },
          "@Y.ScrumTeam":{
            "record":{
              "ScrumMaster":{
                "@custom.IsA":{
                  "string":"Y.Developer X.Person"
                },
                "record":{
                  
                }
              }
            }
          }
        },
        {
          "target":"Some.EntityType",
          "@Y.Movies":{
            "path":"AllMyMovies"
          }
        },
        {
          "target":"MySchema.MyEntityContainer/MyEntitySet/MySchema.MyEntityType/MyProperty",
          "@Y.Movies":{
            "path":"AllMyMovies"
          }
        },
        {
          "target":"Some.EntityType",
          "@Y.ArchivedMovies":{
            "@custom.ItemIsA":{
              "string":"X.Movie"
            },
            "path":"MoviesInStorage"
          }
        },
        {
          "target":"Some.EntityType",
          "@Y.Something":{
            "record":{
              "SomeProperty":{
                "string":"SomeThing"
              },
              "Contacts":{
                "@custom.ItemIsA":{
                  "string":"X.Person"
                },
                "path":"MyContacts"
              },
              "VIPs":{
                "@custom.ItemIsA":{
                  "string":"X.Person"
                },
                "path":"MyBestFriends"
              }
            }
          }
        }
      ]
    }
  }
}